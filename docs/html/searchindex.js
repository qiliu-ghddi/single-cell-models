Search.setIndex({"docnames": ["dev_integration_single_gpu", "dev_pancreas_wandb", "finetune_integration", "index", "modules", "scformer", "scformer.model", "scformer.tokenizer", "scformer.utils", "scgpt", "scgpt.model", "scgpt.scbank", "scgpt.tokenizer", "scgpt.utils", "test"], "filenames": ["dev_integration_single_gpu.rst", "dev_pancreas_wandb.rst", "finetune_integration.rst", "index.rst", "modules.rst", "scformer.rst", "scformer.model.rst", "scformer.tokenizer.rst", "scformer.utils.rst", "scgpt.rst", "scgpt.model.rst", "scgpt.scbank.rst", "scgpt.tokenizer.rst", "scgpt.utils.rst", "test.rst"], "titles": ["dev_integration_single_gpu module", "dev_pancreas_wandb module", "finetune_integration module", "Welcome to scformer\u2019s documentation!", "scgpt", "scformer package", "scformer.model package", "scformer.tokenizer package", "scformer.utils package", "scgpt package", "scgpt.model package", "scgpt.scbank package", "scgpt.tokenizer package", "scgpt.utils package", "test module"], "terms": {"scgpt": 3, "packag": [3, 4], "scgpt_exampl": 3, "finetune_integr": [3, 4], "modul": [3, 4], "scformer_exampl": 3, "dev_integration_single_gpu": [3, 4], "dev_pancreas_wandb": [3, 4], "test": [3, 4, 5, 9], "index": [3, 7, 10, 11, 12], "search": 3, "page": 3, "subpackag": 4, "model": [4, 5, 9], "submodul": 4, "dsbn": [4, 5, 9], "generation_model": [4, 5, 9], "grad_revers": [4, 5, 9], "content": 4, "scbank": [4, 9], "data": [4, 5, 6, 7, 8, 9, 10, 12, 13], "databank": [4, 9], "monitor": [4, 9], "set": [4, 7, 8, 9, 12, 13], "token": [4, 5, 6, 9, 10, 11], "gene_token": [4, 5, 9], "util": [4, 5, 9], "config": [4, 8, 13], "data_col": 4, "datacol": [4, 5, 9], "do_bin": [4, 9], "do_mlm": [4, 5, 9], "do_pad": [4, 5, 9], "keep_first_n_token": [4, 5, 9], "mask_valu": [4, 5, 7, 9, 12], "max_length": [4, 5, 9], "mlm_probabl": [4, 5, 9], "pad_token_id": [4, 5, 9], "pad_valu": [4, 5, 6, 7, 8, 9, 10, 12, 13], "sampl": [4, 5, 9], "data_sampl": 4, "subsetsequentialsampl": [4, 5, 9], "subsetsbatchsampl": [4, 5, 9], "logger": [4, 8, 13], "loss": 4, "criterion_neg_log_bernoulli": [4, 9], "masked_mse_loss": [4, 9], "masked_relative_error": [4, 9], "preprocess": 4, "preprocessor": [4, 5, 9], "check_log": [4, 5, 9], "bin": [4, 5, 9], "trainer": 4, "add_num": [4, 9], "divide_num": [4, 9], "multiply_num": [4, 9], "subtract_num": [4, 9], "domainspecificbatchnorm1d": [5, 6, 9, 10], "bn_handl": [5, 6, 9, 10], "train": [5, 6, 7, 8, 9, 10, 12, 13], "domainspecificbatchnorm2d": [5, 6, 9, 10], "clsdecod": [5, 6, 9, 10], "forward": [5, 6, 9, 10], "geneencod": [5, 6, 9, 10], "mvcdecod": [5, 6, 9, 10], "positionalencod": [5, 6, 9, 10], "similar": [5, 6, 9, 10], "transformergener": [5, 6, 9, 10], "encode_batch": [5, 6, 9, 10], "init_weight": [5, 6, 9, 10], "pred_perturb": [5, 6, 9, 10], "valueencod": [5, 6], "generate_square_subsequent_mask": [5, 6, 9, 10], "gradrevers": [5, 6, 9, 10], "backward": [5, 6, 9, 10], "adversarialdiscrimin": [5, 6, 9, 10], "batchlabelencod": [5, 6, 9, 10], "categoryvalueencod": [5, 6, 9, 10], "continuousvalueencod": [5, 6, 9, 10], "exprdecod": [5, 6, 9, 10], "transformermodel": [5, 6, 9, 10], "genetoken": [5, 7, 9, 12], "genevocab": [5, 7, 9, 11, 12], "from_dict": [5, 7, 9, 12], "from_fil": [5, 7, 9, 12], "pad_token": [5, 6, 7, 9, 10, 12], "save_json": [5, 7, 9, 12], "set_default_token": [5, 7, 9, 12], "get_default_gene_vocab": [5, 7, 9, 12], "pad_batch": [5, 7, 9, 12], "random_mask_valu": [5, 7, 9, 12], "tokenize_and_pad_batch": [5, 7, 9, 12], "tokenize_batch": [5, 7, 9, 12], "add_file_handl": [5, 8, 9, 13], "category_str2int": [5, 8, 9, 13], "eval_scib_metr": [5, 8, 9, 13], "find_required_colum": [5, 8, 9, 13], "gene_vocabulari": [5, 8, 9, 13], "get_free_gpu": [5, 8, 9, 13], "histogram": [5, 8, 9, 13], "isnotebook": [5, 8, 9, 13], "set_se": [5, 8, 9, 13], "tensorlist2tensor": [5, 8, 9, 13], "class": [5, 6, 7, 9, 10, 11, 12, 13], "bool": [5, 6, 7, 8, 9, 10, 11, 12, 13], "true": [5, 6, 7, 9, 10, 11, 12], "int": [5, 6, 7, 8, 9, 10, 11, 12, 13], "none": [5, 6, 7, 8, 9, 10, 11, 12, 13], "0": [5, 6, 7, 9, 10, 11, 12], "float": [5, 6, 7, 9, 10, 12], "15": [5, 7, 9, 12], "1": [5, 6, 7, 9, 10, 12], "sourc": [5, 6, 7, 8, 9, 10, 11, 12, 13], "base": [5, 6, 7, 9, 10, 11, 12, 13], "object": [5, 6, 8, 9, 10, 11, 13], "collat": [5, 9], "mask": [5, 6, 7, 9, 10, 12], "valu": [5, 6, 7, 9, 10, 12], "learn": [5, 9], "task": [5, 6, 9, 10], "It": [5, 6, 9, 10], "pad": [5, 6, 7, 9, 10, 12], "sequenc": [5, 9, 10], "maximum": [5, 7, 9, 12], "length": [5, 7, 9, 12], "batch": [5, 6, 7, 8, 9, 10, 12, 13], "gene": [5, 6, 7, 8, 9, 10, 11, 12, 13], "express": [5, 7, 9, 12], "paramet": [5, 6, 7, 8, 9, 10, 11, 12, 13], "whether": [5, 6, 7, 8, 9, 10, 11, 12, 13], "max": [5, 9], "option": [5, 6, 8, 9, 10, 13], "id": [5, 6, 7, 8, 9, 10, 11, 12, 13], "us": [5, 6, 8, 9, 10, 11, 13], "thi": [5, 6, 8, 9, 10, 11, 13], "i": [5, 6, 9, 10, 11], "requir": [5, 6, 8, 9, 10, 13], "do": [5, 9], "mlm": [5, 9], "probabl": [5, 9], "fill": [5, 9], "postion": [5, 9], "ar": [5, 6, 8, 9, 10, 13], "instead": [5, 6, 9, 10, 11], "truncat": [5, 9], "number": [5, 6, 7, 9, 10, 12], "begin": [5, 9], "keep": [5, 9], "unchang": [5, 7, 9, 12], "from": [5, 6, 7, 9, 10, 11, 12], "when": [5, 6, 9, 10], "special": [5, 7, 9, 12], "have": [5, 6, 9, 10, 11], "been": [5, 9, 11], "ad": [5, 9], "default": [5, 7, 9, 10, 11, 12], "indic": [5, 7, 9, 11, 12], "sampler": [5, 9], "element": [5, 9], "sequenti": [5, 9], "given": [5, 6, 9, 10], "list": [5, 7, 8, 9, 11, 12, 13], "without": [5, 9], "replac": [5, 9, 11], "subset": [5, 9], "batch_siz": [5, 6, 7, 9, 10, 12], "intra_subset_shuffl": [5, 9], "inter_subset_shuffl": [5, 9], "drop_last": [5, 9], "fals": [5, 6, 7, 8, 9, 10, 11, 12, 13], "each": [5, 6, 9, 10], "repres": [5, 6, 9, 10], "randomli": [5, 7, 9, 12], "onli": [5, 6, 9, 10, 11], "contain": [5, 7, 9, 11, 12], "singl": [5, 9, 11], "scenario": [5, 9], "where": [5, 9], "need": [5, 6, 9, 10], "drawn": [5, 9], "multipl": [5, 9, 11], "separ": [5, 9], "A": [5, 7, 9, 12], "size": [5, 8, 9, 10, 13], "mini": [5, 9], "If": [5, 6, 9, 10, 11], "shuffl": [5, 9], "within": [5, 6, 9, 10], "order": [5, 9], "drop": [5, 9], "last": [5, 9], "its": [5, 9], "would": [5, 9], "less": [5, 9], "than": [5, 9], "use_kei": [5, 9], "str": [5, 6, 7, 8, 9, 10, 11, 12, 13], "filter_gene_by_count": [5, 9], "filter_cell_by_count": [5, 9], "normalize_tot": [5, 9], "10000": [5, 9], "result_normed_kei": [5, 9], "x_norm": [5, 9], "log1p": [5, 9], "result_log1p_kei": [5, 9], "x_log1p": [5, 9], "subset_hvg": [5, 9], "hvg_use_kei": [5, 9], "hvg_flavor": [5, 9], "seurat_v3": [5, 9], "result_binned_kei": [5, 9], "x_bin": [5, 9], "prepar": [5, 9], "valid": [5, 8, 9, 11, 13], "split": [5, 9], "normal": [5, 9, 10], "raw": [5, 6, 9, 10], "other": [5, 6, 9, 10], "transform": [5, 6, 9, 10], "preset": [5, 9], "input": [5, 6, 8, 9, 10, 13], "format": [5, 9, 11], "adata": [5, 8, 9, 11, 13], "anndata": [5, 8, 9, 11, 13], "obs_kei": [5, 9], "check": [5, 8, 9, 11, 13], "alreadi": [5, 9], "arg": [5, 6, 9, 10], "The": [5, 6, 7, 8, 9, 10, 11, 12, 13], "kei": [5, 6, 8, 9, 10, 11, 13], "ob": [5, 9], "inform": [5, 6, 9, 10], "highli": [5, 9], "variabl": [5, 9], "select": [5, 9], "step": [5, 9, 10], "num_featur": [6, 10], "num_domain": [6, 10], "ep": [6, 10], "1e": [6, 10], "05": [6, 10], "momentum": [6, 10], "affin": [6, 10], "track_running_stat": [6, 10], "_domainspecificbatchnorm": [6, 10], "properti": [6, 7, 10, 11, 12], "d_model": [6, 10], "n_cl": [6, 10], "nlayer": [6, 10], "3": [6, 10], "activ": [6, 10], "callabl": [6, 10, 11], "torch": [6, 7, 9, 10, 12], "nn": [6, 10], "relu": [6, 10], "decod": [6, 10], "classif": [6, 10], "x": [6, 10, 11], "tensor": [6, 7, 9, 10, 12], "shape": [6, 7, 10, 12], "embsiz": [6, 10], "num_embed": [6, 10], "embedding_dim": [6, 10], "padding_idx": [6, 10], "defin": [6, 10], "comput": [6, 9, 10, 11], "perform": [6, 10, 11], "everi": [6, 10], "call": [6, 10], "should": [6, 7, 10, 12], "overridden": [6, 10], "all": [6, 7, 10, 11, 12], "subclass": [6, 10], "although": [6, 10], "recip": [6, 10], "pass": [6, 10], "function": [6, 8, 10, 11, 13], "one": [6, 10], "instanc": [6, 10, 11], "afterward": [6, 10], "sinc": [6, 10, 11], "former": [6, 10], "take": [6, 10], "care": [6, 10], "run": [6, 10], "regist": [6, 10], "hook": [6, 10], "while": [6, 10], "latter": [6, 10], "silent": [6, 10], "ignor": [6, 10], "them": [6, 10], "arch_styl": [6, 10], "inner": [6, 10], "product": [6, 9, 10], "query_activ": [6, 10], "sigmoid": [6, 10], "hidden_activ": [6, 10], "prelu": [6, 10], "predict": [6, 10], "cell": [6, 10, 11], "embed": [6, 10], "There": [6, 10], "actual": [6, 10], "three": [6, 10], "wai": [6, 10], "make": [6, 10], "start": [6, 10], "gene_emb": [6, 10], "query_vec": [6, 10], "cell_emb": [6, 10], "w": [6, 10], "queri": [6, 10], "vec": [6, 10], "most": [6, 10], "sens": [6, 10], "space": [6, 10], "look": [6, 10, 11], "differ": [6, 10], "dimens": [6, 10], "cel_emb": [6, 10], "sync": [6, 9, 10, 11], "ha": [6, 10], "explicit": [6, 10], "interact": [6, 10], "fc": [6, 10], "benifit": [6, 10], "smaller": [6, 10], "like": [6, 7, 10, 12], "bottl": [6, 10], "neck": [6, 10], "layer": [6, 10, 11], "For": [6, 10], "exampl": [6, 10], "64": [6, 10], "dim": [6, 10], "note": [6, 8, 10, 11, 13], "import": [6, 10], "vector": [6, 10], "directli": [6, 10], "emb": [6, 10], "becaus": [6, 10], "sure": [6, 10], "mix": [6, 10], "place": [6, 10], "get": [6, 7, 10, 12], "2": [6, 10], "bare": [6, 10], "mind": [6, 10], "avoid": [6, 10], "short": [6, 10], "cut": [6, 10], "just": [6, 10], "form": [6, 10], "guess": [6, 10], "better": [6, 10], "4": [6, 8, 10, 13], "todo": [6, 10], "can": [6, 10, 11], "even": [6, 10], "try": [6, 10], "detach": [6, 10], "seq_len": [6, 10], "dropout": [6, 10], "max_len": [6, 7, 10, 12], "5000": [6, 10], "temp": [6, 10], "dot": [6, 10], "cosin": [6, 10], "y": [6, 10], "ntoken": [6, 10], "nhead": [6, 10], "d_hid": [6, 10], "nlayers_cl": [6, 10], "vocab": [6, 7, 10, 11, 12], "ani": [6, 10], "5": [6, 10], "pert_pad_id": [6, 10], "do_mvc": [6, 10], "cell_emb_styl": [6, 10], "cl": [6, 7, 10, 12], "mvc_decoder_styl": [6, 10], "ecs_threshold": [6, 10], "src": [6, 10], "src_key_padding_mask": [6, 10], "output_to_cpu": [6, 10], "n": [6, 10], "return": [6, 7, 8, 9, 10, 11, 12, 13], "output": [6, 10], "input_pert_flag": [6, 10], "cce": [6, 10], "mvc": [6, 10], "ec": [6, 10], "map": [6, 7, 10, 11, 12], "celltyp": [6, 8, 10, 13], "contrast": [6, 10], "elast": [6, 10], "dict": [6, 7, 8, 10, 11, 12, 13], "batch_data": [6, 10], "include_zero_gen": [6, 7, 10, 12], "wise": [6, 10], "dictionari": [6, 7, 8, 10, 12, 13], "max_valu": [6, 10], "512": [6, 10], "encod": [6, 10], "real": [6, 10], "neural": [6, 10], "net": [6, 10], "project": [6, 10], "sz": [6, 10], "gener": [6, 8, 9, 10, 13], "an": [6, 10, 11], "upper": [6, 10], "triangular": [6, 10], "matrix": [6, 10], "inf": [6, 10], "zero": [6, 7, 10, 12], "diag": [6, 10], "kwarg": [6, 7, 10, 12], "static": [6, 10], "ctx": [6, 10], "grad_output": [6, 10], "formula": [6, 10], "differenti": [6, 10], "oper": [6, 10], "mode": [6, 10], "automat": [6, 8, 10, 11, 13], "alia": [6, 10], "vjp": [6, 10], "must": [6, 10], "accept": [6, 10], "context": [6, 10], "first": [6, 8, 9, 10, 13], "argument": [6, 10], "follow": [6, 10, 11], "mani": [6, 10], "non": [6, 7, 10, 12], "were": [6, 10], "gradient": [6, 10], "r": [6, 10], "t": [6, 10], "correspond": [6, 10], "grad": [6, 10], "you": [6, 10], "retriev": [6, 10], "save": [6, 7, 8, 9, 10, 11, 12, 13], "dure": [6, 10], "also": [6, 10, 11], "attribut": [6, 10, 11], "needs_input_grad": [6, 10], "tupl": [6, 7, 8, 10, 12, 13], "boolean": [6, 10], "e": [6, 10], "g": [6, 10], "lambd": [6, 10], "type": [6, 7, 8, 9, 10, 11, 12, 13], "store": [6, 10], "arbitrari": [6, 10], "though": [6, 10], "current": [6, 10, 11], "enforc": [6, 10], "compat": [6, 10], "either": [6, 7, 10, 12], "save_for_backward": [6, 10], "thei": [6, 10], "intend": [6, 10], "equival": [6, 10], "save_for_forward": [6, 10], "jvp": [6, 10], "leakyrelu": [6, 10], "reverse_grad": [6, 10], "discrimin": [6, 10], "adversari": [6, 10], "correct": [6, 10], "explicit_zero_prob": [6, 10], "use_batch_label": [6, 10], "do_dab": [6, 10], "num_batch_label": [6, 10], "domain_spec_batchnorm": [6, 10], "input_emb_styl": [6, 10], "continu": [6, 10], "n_input_bin": [6, 10], "batch_label": [6, 10], "do_sampl": [6, 10], "label": [6, 8, 10, 13], "pretrainedtoken": [7, 12], "gene_list_or_vocab": [7, 12], "special_first": [7, 12], "default_token": [7, 12], "vocabulari": [7, 11, 12], "classmethod": [7, 11, 12], "token2idx": [7, 12], "self": [7, 10, 11, 12], "load": [7, 8, 9, 11, 12, 13], "file_path": [7, 12], "path": [7, 8, 11, 12, 13], "file": [7, 8, 11, 12, 13], "pickl": [7, 12], "json": [7, 11, 12], "consist": [7, 12], "symbol": [7, 12], "cls_append": [7, 12], "gene_id": [7, 12], "count": [7, 12], "ndarrai": [7, 8, 9, 12, 13], "mask_ratio": [7, 12], "arrai": [7, 10, 12], "n_featur": [7, 12], "ratio": [7, 12], "kept": [7, 12], "append_cl": [7, 12], "cls_token": [7, 12], "return_pt": [7, 12], "cls_id": [7, 12], "equal": [7, 12], "log_file_path": [8, 13], "add": [8, 9, 13], "handler": [8, 13], "category_str": [8, 13], "batch_kei": [8, 13], "str_batch": [8, 13], "label_kei": [8, 13], "configs_dir": [8, 13], "updat": [8, 11, 13], "find": [8, 13], "column": [8, 11, 13], "includ": [8, 11, 13], "str_celltyp": [8, 13], "name": [8, 9, 11, 13], "experiment": [8, 13], "ask": [8, 13], "user": [8, 13], "time": [8, 10, 13], "next": [8, 13], "union": [8, 13], "directori": [8, 11, 13], "celltype_col": [8, 13], "str_celltype_col": [8, 13], "gene_col": [8, 13], "batch_col": [8, 13], "name2id": [8, 13], "id2nam": [8, 13], "color": [8, 13], "blue": [8, 13], "red": [8, 13], "figsiz": [8, 13], "9": [8, 13], "titl": [8, 13], "show": [8, 13], "ax": [8, 13], "plot": [8, 13], "np": [8, 13], "figur": [8, 13], "excut": [8, 13], "jupyt": [8, 13], "notebook": [8, 13], "seed": [8, 13], "random": [8, 13], "tensorlist": [8, 13], "fasttransformerencoderwrapp": [9, 10], "build_fast_transformer_encod": [9, 10], "build_length_mask": [9, 10], "flashtransformerencoderlay": [9, 10], "datat": [9, 11], "is_load": [9, 11], "metainfo": [9, 11], "cell_id": [9, 11], "from_path": [9, 11], "gene_vocab_md5": [9, 11], "main_table_kei": [9, 11], "on_disk_format": [9, 11], "on_disk_path": [9, 11], "study_id": [9, 11], "append_studi": [9, 11], "batch_from_anndata": [9, 11], "custom_filt": [9, 11], "data_t": [9, 11], "delete_studi": [9, 11], "filter": [9, 11], "from_anndata": [9, 11], "gene_vocab": [9, 11], "link": [9, 11], "load_al": [9, 11], "load_anndata": [9, 11], "load_tabl": [9, 11], "main_data": [9, 11], "meta_info": [9, 11], "track": [9, 11], "update_datat": [9, 11], "immediate_sav": [9, 11], "max_tokenize_batch_s": [9, 11], "remove_zero_row": [9, 11], "mainprocessonli": [9, 13], "main_process_onli": [9, 13], "target": 9, "neg": 9, "log": 9, "likelihood": 9, "bernoulli": 9, "distribut": 9, "_description_": 9, "mse": 9, "between": 9, "_summary_": 9, "longtensor": 9, "rel": 9, "error": 9, "row": 9, "n_bin": 9, "num1": 9, "num2": 9, "method": [9, 11], "two": 9, "second": [9, 10], "sum": 9, "divid": 9, "answer": 9, "multipli": 9, "subtract": 9, "use_fast_transform": 10, "fast_transformer_backend": 10, "flash": 10, "pre_norm": 10, "amp": 10, "booltensor": 10, "lengthmask": 10, "dim_feedforward": 10, "2048": 10, "layer_norm_ep": 10, "batch_first": 10, "devic": 10, "dtype": 10, "norm_schem": 10, "post": 10, "transformerencoderlay": 10, "made": [10, 11], "up": 10, "attn": 10, "feedforward": 10, "network": 10, "modifi": 10, "support": 10, "flashattent": 10, "expect": 10, "featur": 10, "head": 10, "multiheadattent": 10, "intermedi": 10, "gelu": 10, "compon": 10, "provid": [10, 11], "seq": 10, "encoder_lay": 10, "8": 10, "rand": 10, "10": 10, "32": 10, "out": 10, "altern": 10, "src_mask": 10, "through": 10, "per": 10, "see": [10, 11], "doc": 10, "time_step": 10, "return_np": 10, "n_batch_label": 10, "move": 10, "cpu": 10, "along": 10, "dimenst": 10, "numpi": 10, "gen_it": 10, "iter": 10, "dataset": 11, "structur": 11, "tabl": 11, "liter": 11, "parquet": 11, "meta": 11, "info": 11, "creat": 11, "same": 11, "factori": 11, "dataclass": 11, "initvar": 11, "larg": 11, "scale": 11, "studi": 11, "http": 11, "github": 11, "com": 11, "subercui": 11, "releas": 11, "study_data": 11, "append": 11, "field": 11, "filter_func": 11, "inplac": 11, "appli": 11, "custom": 11, "delet": 11, "token_col": 11, "annot": 11, "obsm": 11, "main": 11, "immedi": 11, "after": 11, "creation": 11, "md5sum": 11, "record": 11, "manifest": 11, "match": 11, "integ": 11, "data_path": 11, "usual": 11, "later": 11, "design": 11, "work": 11, "memori": 11, "doe": 11, "well": 11, "data_kei": 11, "convert": 11, "table_nam": 11, "exist": 11, "attr_kei": 11, "overwrit": 11, "chang": 11, "disk": 11, "new_tabl": 11, "use_nam": 11, "new": 11, "Will": 11, "arrr": 11, "1000000": 11, "configur": 11, "obj": 13, "func": 13}, "objects": {"": [[5, 0, 0, "-", "scformer"], [9, 0, 0, "-", "scgpt"], [14, 0, 0, "-", "test"]], "scformer": [[5, 0, 0, "-", "data_collator"], [5, 0, 0, "-", "data_sampler"], [6, 0, 0, "-", "model"], [5, 0, 0, "-", "preprocess"], [7, 0, 0, "-", "tokenizer"], [5, 0, 0, "-", "trainer"], [8, 0, 0, "-", "utils"]], "scformer.data_collator": [[5, 1, 1, "", "DataCollator"]], "scformer.data_collator.DataCollator": [[5, 2, 1, "", "do_mlm"], [5, 2, 1, "", "do_padding"], [5, 2, 1, "", "keep_first_n_tokens"], [5, 2, 1, "", "mask_value"], [5, 2, 1, "", "max_length"], [5, 2, 1, "", "mlm_probability"], [5, 2, 1, "", "pad_token_id"], [5, 2, 1, "", "pad_value"], [5, 2, 1, "", "sampling"]], "scformer.data_sampler": [[5, 1, 1, "", "SubsetSequentialSampler"], [5, 1, 1, "", "SubsetsBatchSampler"]], "scformer.model": [[6, 0, 0, "-", "dsbn"], [6, 0, 0, "-", "generation_model"], [6, 0, 0, "-", "grad_reverse"], [6, 0, 0, "-", "model"]], "scformer.model.dsbn": [[6, 1, 1, "", "DomainSpecificBatchNorm1d"], [6, 1, 1, "", "DomainSpecificBatchNorm2d"]], "scformer.model.dsbn.DomainSpecificBatchNorm1d": [[6, 3, 1, "", "bn_handle"], [6, 2, 1, "", "training"]], "scformer.model.dsbn.DomainSpecificBatchNorm2d": [[6, 3, 1, "", "bn_handle"], [6, 2, 1, "", "training"]], "scformer.model.generation_model": [[6, 1, 1, "", "ClsDecoder"], [6, 1, 1, "", "GeneEncoder"], [6, 1, 1, "", "MVCDecoder"], [6, 1, 1, "", "PositionalEncoding"], [6, 1, 1, "", "Similarity"], [6, 1, 1, "", "TransformerGenerator"], [6, 1, 1, "", "ValueEncoding"], [6, 5, 1, "", "generate_square_subsequent_mask"]], "scformer.model.generation_model.ClsDecoder": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.generation_model.GeneEncoder": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.generation_model.MVCDecoder": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.generation_model.PositionalEncoding": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.generation_model.Similarity": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.generation_model.TransformerGenerator": [[6, 4, 1, "", "encode_batch"], [6, 4, 1, "", "forward"], [6, 4, 1, "", "init_weights"], [6, 4, 1, "", "pred_perturb"], [6, 2, 1, "", "training"]], "scformer.model.generation_model.ValueEncoding": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.grad_reverse": [[6, 1, 1, "", "GradReverse"], [6, 5, 1, "", "grad_reverse"]], "scformer.model.grad_reverse.GradReverse": [[6, 4, 1, "", "backward"], [6, 4, 1, "", "forward"]], "scformer.model.model": [[6, 1, 1, "", "AdversarialDiscriminator"], [6, 1, 1, "", "BatchLabelEncoder"], [6, 1, 1, "", "CategoryValueEncoder"], [6, 1, 1, "", "ClsDecoder"], [6, 1, 1, "", "ContinuousValueEncoder"], [6, 1, 1, "", "ExprDecoder"], [6, 1, 1, "", "GeneEncoder"], [6, 1, 1, "", "MVCDecoder"], [6, 1, 1, "", "PositionalEncoding"], [6, 1, 1, "", "Similarity"], [6, 1, 1, "", "TransformerModel"], [6, 5, 1, "", "generate_square_subsequent_mask"]], "scformer.model.model.AdversarialDiscriminator": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.model.BatchLabelEncoder": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.model.CategoryValueEncoder": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.model.ClsDecoder": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.model.ContinuousValueEncoder": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.model.ExprDecoder": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.model.GeneEncoder": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.model.MVCDecoder": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.model.PositionalEncoding": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.model.Similarity": [[6, 4, 1, "", "forward"], [6, 2, 1, "", "training"]], "scformer.model.model.TransformerModel": [[6, 4, 1, "", "encode_batch"], [6, 4, 1, "", "forward"], [6, 4, 1, "", "init_weights"], [6, 2, 1, "", "training"]], "scformer.preprocess": [[5, 1, 1, "", "Preprocessor"]], "scformer.preprocess.Preprocessor": [[5, 4, 1, "", "check_logged"]], "scformer.tokenizer": [[7, 0, 0, "-", "gene_tokenizer"]], "scformer.tokenizer.gene_tokenizer": [[7, 1, 1, "", "GeneTokenizer"], [7, 1, 1, "", "GeneVocab"], [7, 5, 1, "", "get_default_gene_vocab"], [7, 5, 1, "", "pad_batch"], [7, 5, 1, "", "random_mask_value"], [7, 5, 1, "", "tokenize_and_pad_batch"], [7, 5, 1, "", "tokenize_batch"]], "scformer.tokenizer.gene_tokenizer.GeneVocab": [[7, 4, 1, "", "from_dict"], [7, 4, 1, "", "from_file"], [7, 3, 1, "", "pad_token"], [7, 4, 1, "", "save_json"], [7, 4, 1, "", "set_default_token"], [7, 2, 1, "", "training"]], "scformer.utils": [[8, 0, 0, "-", "util"]], "scformer.utils.util": [[8, 5, 1, "", "add_file_handler"], [8, 5, 1, "", "category_str2int"], [8, 5, 1, "", "eval_scib_metrics"], [8, 5, 1, "", "find_required_colums"], [8, 5, 1, "", "gene_vocabulary"], [8, 5, 1, "", "get_free_gpu"], [8, 5, 1, "", "histogram"], [8, 5, 1, "", "isnotebook"], [8, 5, 1, "", "set_seed"], [8, 5, 1, "", "tensorlist2tensor"]], "scgpt": [[9, 0, 0, "-", "data_collator"], [9, 0, 0, "-", "data_sampler"], [9, 0, 0, "-", "logger"], [9, 0, 0, "-", "loss"], [10, 0, 0, "-", "model"], [9, 0, 0, "-", "preprocess"], [11, 0, 0, "-", "scbank"], [12, 0, 0, "-", "tokenizer"], [9, 0, 0, "-", "trainer"], [13, 0, 0, "-", "utils"]], "scgpt.data_collator": [[9, 1, 1, "", "DataCollator"]], "scgpt.data_collator.DataCollator": [[9, 2, 1, "", "do_binning"], [9, 2, 1, "", "do_mlm"], [9, 2, 1, "", "do_padding"], [9, 2, 1, "", "keep_first_n_tokens"], [9, 2, 1, "", "mask_value"], [9, 2, 1, "", "max_length"], [9, 2, 1, "", "mlm_probability"], [9, 2, 1, "", "pad_token_id"], [9, 2, 1, "", "pad_value"], [9, 2, 1, "", "sampling"]], "scgpt.data_sampler": [[9, 1, 1, "", "SubsetSequentialSampler"], [9, 1, 1, "", "SubsetsBatchSampler"]], "scgpt.loss": [[9, 5, 1, "", "criterion_neg_log_bernoulli"], [9, 5, 1, "", "masked_mse_loss"], [9, 5, 1, "", "masked_relative_error"]], "scgpt.model": [[10, 0, 0, "-", "dsbn"], [10, 0, 0, "-", "generation_model"], [10, 0, 0, "-", "grad_reverse"], [10, 0, 0, "-", "model"]], "scgpt.model.dsbn": [[10, 1, 1, "", "DomainSpecificBatchNorm1d"], [10, 1, 1, "", "DomainSpecificBatchNorm2d"]], "scgpt.model.dsbn.DomainSpecificBatchNorm1d": [[10, 3, 1, "", "bn_handle"], [10, 2, 1, "", "training"]], "scgpt.model.dsbn.DomainSpecificBatchNorm2d": [[10, 3, 1, "", "bn_handle"], [10, 2, 1, "", "training"]], "scgpt.model.generation_model": [[10, 1, 1, "", "ClsDecoder"], [10, 1, 1, "", "GeneEncoder"], [10, 1, 1, "", "PositionalEncoding"], [10, 1, 1, "", "Similarity"], [10, 1, 1, "", "TransformerGenerator"], [10, 5, 1, "", "generate_square_subsequent_mask"]], "scgpt.model.generation_model.ClsDecoder": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.generation_model.GeneEncoder": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.generation_model.PositionalEncoding": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.generation_model.Similarity": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.generation_model.TransformerGenerator": [[10, 4, 1, "", "encode_batch"], [10, 4, 1, "", "forward"], [10, 4, 1, "", "init_weights"], [10, 4, 1, "", "pred_perturb"], [10, 2, 1, "", "training"]], "scgpt.model.grad_reverse": [[10, 1, 1, "", "GradReverse"], [10, 5, 1, "", "grad_reverse"]], "scgpt.model.grad_reverse.GradReverse": [[10, 4, 1, "", "backward"], [10, 4, 1, "", "forward"]], "scgpt.model.model": [[10, 1, 1, "", "AdversarialDiscriminator"], [10, 1, 1, "", "BatchLabelEncoder"], [10, 1, 1, "", "CategoryValueEncoder"], [10, 1, 1, "", "ClsDecoder"], [10, 1, 1, "", "ContinuousValueEncoder"], [10, 1, 1, "", "ExprDecoder"], [10, 1, 1, "", "FastTransformerEncoderWrapper"], [10, 1, 1, "", "FlashTransformerEncoderLayer"], [10, 1, 1, "", "GeneEncoder"], [10, 1, 1, "", "MVCDecoder"], [10, 1, 1, "", "PositionalEncoding"], [10, 1, 1, "", "Similarity"], [10, 1, 1, "", "TransformerModel"], [10, 5, 1, "", "generate_square_subsequent_mask"]], "scgpt.model.model.AdversarialDiscriminator": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.BatchLabelEncoder": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.CategoryValueEncoder": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.ClsDecoder": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.ContinuousValueEncoder": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.ExprDecoder": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.FastTransformerEncoderWrapper": [[10, 4, 1, "", "build_fast_transformer_encoder"], [10, 4, 1, "", "build_length_mask"], [10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.FlashTransformerEncoderLayer": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.GeneEncoder": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.MVCDecoder": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.PositionalEncoding": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.Similarity": [[10, 4, 1, "", "forward"], [10, 2, 1, "", "training"]], "scgpt.model.model.TransformerModel": [[10, 4, 1, "", "encode_batch"], [10, 4, 1, "", "forward"], [10, 4, 1, "", "generate"], [10, 4, 1, "", "init_weights"], [10, 2, 1, "", "training"]], "scgpt.preprocess": [[9, 1, 1, "", "Preprocessor"], [9, 5, 1, "", "binning"]], "scgpt.preprocess.Preprocessor": [[9, 4, 1, "", "check_logged"]], "scgpt.scbank": [[11, 0, 0, "-", "data"], [11, 0, 0, "-", "databank"], [11, 0, 0, "-", "monitor"], [11, 0, 0, "-", "setting"]], "scgpt.scbank.data": [[11, 1, 1, "", "DataTable"], [11, 1, 1, "", "MetaInfo"]], "scgpt.scbank.data.DataTable": [[11, 2, 1, "", "data"], [11, 3, 1, "", "is_loaded"], [11, 2, 1, "", "name"], [11, 4, 1, "", "save"]], "scgpt.scbank.data.MetaInfo": [[11, 2, 1, "", "cell_ids"], [11, 4, 1, "", "from_path"], [11, 2, 1, "", "gene_vocab_md5"], [11, 4, 1, "", "load"], [11, 2, 1, "", "main_table_key"], [11, 2, 1, "", "on_disk_format"], [11, 2, 1, "", "on_disk_path"], [11, 4, 1, "", "save"], [11, 2, 1, "", "study_ids"]], "scgpt.scbank.databank": [[11, 1, 1, "", "DataBank"]], "scgpt.scbank.databank.DataBank": [[11, 4, 1, "", "append_study"], [11, 4, 1, "", "batch_from_anndata"], [11, 4, 1, "", "custom_filter"], [11, 2, 1, "", "data_tables"], [11, 4, 1, "", "delete_study"], [11, 4, 1, "", "filter"], [11, 4, 1, "", "from_anndata"], [11, 4, 1, "", "from_path"], [11, 3, 1, "", "gene_vocab"], [11, 4, 1, "", "link"], [11, 4, 1, "", "load"], [11, 4, 1, "", "load_all"], [11, 4, 1, "", "load_anndata"], [11, 4, 1, "", "load_table"], [11, 3, 1, "", "main_data"], [11, 3, 1, "", "main_table_key"], [11, 2, 1, "", "meta_info"], [11, 4, 1, "", "save"], [11, 2, 1, "", "settings"], [11, 4, 1, "", "sync"], [11, 4, 1, "", "track"], [11, 4, 1, "", "update_datatables"]], "scgpt.scbank.setting": [[11, 1, 1, "", "Setting"]], "scgpt.scbank.setting.Setting": [[11, 2, 1, "", "immediate_save"], [11, 2, 1, "", "max_tokenize_batch_size"], [11, 2, 1, "", "remove_zero_rows"]], "scgpt.tokenizer": [[12, 0, 0, "-", "gene_tokenizer"]], "scgpt.tokenizer.gene_tokenizer": [[12, 1, 1, "", "GeneTokenizer"], [12, 1, 1, "", "GeneVocab"], [12, 5, 1, "", "get_default_gene_vocab"], [12, 5, 1, "", "pad_batch"], [12, 5, 1, "", "random_mask_value"], [12, 5, 1, "", "tokenize_and_pad_batch"], [12, 5, 1, "", "tokenize_batch"]], "scgpt.tokenizer.gene_tokenizer.GeneVocab": [[12, 4, 1, "", "from_dict"], [12, 4, 1, "", "from_file"], [12, 3, 1, "", "pad_token"], [12, 4, 1, "", "save_json"], [12, 4, 1, "", "set_default_token"], [12, 2, 1, "", "training"]], "scgpt.trainer": [[9, 5, 1, "", "add_nums"], [9, 5, 1, "", "divide_nums"], [9, 5, 1, "", "multiply_nums"], [9, 5, 1, "", "subtract_nums"]], "scgpt.utils": [[13, 0, 0, "-", "util"]], "scgpt.utils.util": [[13, 1, 1, "", "MainProcessOnly"], [13, 5, 1, "", "add_file_handler"], [13, 5, 1, "", "category_str2int"], [13, 5, 1, "", "eval_scib_metrics"], [13, 5, 1, "", "find_required_colums"], [13, 5, 1, "", "gene_vocabulary"], [13, 5, 1, "", "get_free_gpu"], [13, 5, 1, "", "histogram"], [13, 5, 1, "", "isnotebook"], [13, 5, 1, "", "main_process_only"], [13, 5, 1, "", "set_seed"], [13, 5, 1, "", "tensorlist2tensor"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"]}, "titleterms": {"dev_integration_single_gpu": 0, "modul": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "dev_pancreas_wandb": 1, "finetune_integr": 2, "welcom": 3, "scformer": [3, 4, 5, 6, 7, 8], "": 3, "document": 3, "content": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "indic": 3, "tabl": 3, "scgpt": [4, 9, 10, 11, 12, 13], "scgpt_exampl": 4, "scformer_exampl": 4, "packag": [5, 6, 7, 8, 9, 10, 11, 12, 13], "subpackag": [5, 9], "submodul": [5, 6, 7, 8, 9, 10, 11, 12, 13], "data_col": [5, 9], "data_sampl": [5, 9], "preprocess": [5, 9], "trainer": [5, 9], "model": [6, 10], "dsbn": [6, 10], "generation_model": [6, 10], "grad_revers": [6, 10], "token": [7, 12], "gene_token": [7, 12], "util": [8, 13], "config": 9, "logger": 9, "loss": 9, "scbank": 11, "data": 11, "databank": 11, "monitor": 11, "set": 11, "test": 14}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"dev_integration_single_gpu module": [[0, "dev-integration-single-gpu-module"]], "dev_pancreas_wandb module": [[1, "dev-pancreas-wandb-module"]], "finetune_integration module": [[2, "finetune-integration-module"]], "Welcome to scformer\u2019s documentation!": [[3, "welcome-to-scformer-s-documentation"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "scgpt": [[4, "scgpt"]], "scgpt_examples": [[4, "scgpt-examples"]], "scformer": [[4, "scformer"]], "scformer_examples": [[4, "scformer-examples"]], "scformer package": [[5, "scformer-package"]], "Subpackages": [[5, "subpackages"], [9, "subpackages"]], "Submodules": [[5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"]], "scformer.data_collator module": [[5, "module-scformer.data_collator"]], "scformer.data_sampler module": [[5, "module-scformer.data_sampler"]], "scformer.preprocess module": [[5, "module-scformer.preprocess"]], "scformer.trainer module": [[5, "module-scformer.trainer"]], "Module contents": [[5, "module-scformer"], [6, "module-scformer.model"], [7, "module-scformer.tokenizer"], [8, "module-scformer.utils"], [9, "module-scgpt"], [10, "module-scgpt.model"], [11, "module-scgpt.scbank"], [12, "module-scgpt.tokenizer"], [13, "module-scgpt.utils"]], "scformer.model package": [[6, "scformer-model-package"]], "scformer.model.dsbn module": [[6, "module-scformer.model.dsbn"]], "scformer.model.generation_model module": [[6, "module-scformer.model.generation_model"]], "scformer.model.grad_reverse module": [[6, "module-scformer.model.grad_reverse"]], "scformer.model.model module": [[6, "module-scformer.model.model"]], "scformer.tokenizer package": [[7, "scformer-tokenizer-package"]], "scformer.tokenizer.gene_tokenizer module": [[7, "module-scformer.tokenizer.gene_tokenizer"]], "scformer.utils package": [[8, "scformer-utils-package"]], "scformer.utils.util module": [[8, "module-scformer.utils.util"]], "scgpt package": [[9, "scgpt-package"]], "scgpt.config module": [[9, "scgpt-config-module"]], "scgpt.data_collator module": [[9, "module-scgpt.data_collator"]], "scgpt.data_sampler module": [[9, "module-scgpt.data_sampler"]], "scgpt.logger module": [[9, "module-scgpt.logger"]], "scgpt.loss module": [[9, "module-scgpt.loss"]], "scgpt.preprocess module": [[9, "module-scgpt.preprocess"]], "scgpt.trainer module": [[9, "module-scgpt.trainer"]], "scgpt.model package": [[10, "scgpt-model-package"]], "scgpt.model.dsbn module": [[10, "module-scgpt.model.dsbn"]], "scgpt.model.generation_model module": [[10, "module-scgpt.model.generation_model"]], "scgpt.model.grad_reverse module": [[10, "module-scgpt.model.grad_reverse"]], "scgpt.model.model module": [[10, "module-scgpt.model.model"]], "scgpt.scbank package": [[11, "scgpt-scbank-package"]], "scgpt.scbank.data module": [[11, "module-scgpt.scbank.data"]], "scgpt.scbank.databank module": [[11, "module-scgpt.scbank.databank"]], "scgpt.scbank.monitor module": [[11, "module-scgpt.scbank.monitor"]], "scgpt.scbank.setting module": [[11, "module-scgpt.scbank.setting"]], "scgpt.tokenizer package": [[12, "scgpt-tokenizer-package"]], "scgpt.tokenizer.gene_tokenizer module": [[12, "module-scgpt.tokenizer.gene_tokenizer"]], "scgpt.utils package": [[13, "scgpt-utils-package"]], "scgpt.utils.util module": [[13, "module-scgpt.utils.util"]], "test module": [[14, "module-test"]]}, "indexentries": {"datacollator (class in scformer.data_collator)": [[5, "scformer.data_collator.DataCollator"]], "preprocessor (class in scformer.preprocess)": [[5, "scformer.preprocess.Preprocessor"]], "subsetsequentialsampler (class in scformer.data_sampler)": [[5, "scformer.data_sampler.SubsetSequentialSampler"]], "subsetsbatchsampler (class in scformer.data_sampler)": [[5, "scformer.data_sampler.SubsetsBatchSampler"]], "check_logged() (scformer.preprocess.preprocessor method)": [[5, "scformer.preprocess.Preprocessor.check_logged"]], "do_mlm (scformer.data_collator.datacollator attribute)": [[5, "scformer.data_collator.DataCollator.do_mlm"]], "do_padding (scformer.data_collator.datacollator attribute)": [[5, "scformer.data_collator.DataCollator.do_padding"]], "keep_first_n_tokens (scformer.data_collator.datacollator attribute)": [[5, "scformer.data_collator.DataCollator.keep_first_n_tokens"]], "mask_value (scformer.data_collator.datacollator attribute)": [[5, "scformer.data_collator.DataCollator.mask_value"]], "max_length (scformer.data_collator.datacollator attribute)": [[5, "scformer.data_collator.DataCollator.max_length"]], "mlm_probability (scformer.data_collator.datacollator attribute)": [[5, "scformer.data_collator.DataCollator.mlm_probability"]], "module": [[5, "module-scformer"], [5, "module-scformer.data_collator"], [5, "module-scformer.data_sampler"], [5, "module-scformer.preprocess"], [5, "module-scformer.trainer"], [6, "module-scformer.model"], [6, "module-scformer.model.dsbn"], [6, "module-scformer.model.generation_model"], [6, "module-scformer.model.grad_reverse"], [6, "module-scformer.model.model"], [7, "module-scformer.tokenizer"], [7, "module-scformer.tokenizer.gene_tokenizer"], [8, "module-scformer.utils"], [8, "module-scformer.utils.util"], [9, "module-scgpt"], [9, "module-scgpt.data_collator"], [9, "module-scgpt.data_sampler"], [9, "module-scgpt.logger"], [9, "module-scgpt.loss"], [9, "module-scgpt.preprocess"], [9, "module-scgpt.trainer"], [10, "module-scgpt.model"], [10, "module-scgpt.model.dsbn"], [10, "module-scgpt.model.generation_model"], [10, "module-scgpt.model.grad_reverse"], [10, "module-scgpt.model.model"], [11, "module-scgpt.scbank"], [11, "module-scgpt.scbank.data"], [11, "module-scgpt.scbank.databank"], [11, "module-scgpt.scbank.monitor"], [11, "module-scgpt.scbank.setting"], [12, "module-scgpt.tokenizer"], [12, "module-scgpt.tokenizer.gene_tokenizer"], [13, "module-scgpt.utils"], [13, "module-scgpt.utils.util"], [14, "module-test"]], "pad_token_id (scformer.data_collator.datacollator attribute)": [[5, "scformer.data_collator.DataCollator.pad_token_id"]], "pad_value (scformer.data_collator.datacollator attribute)": [[5, "scformer.data_collator.DataCollator.pad_value"]], "sampling (scformer.data_collator.datacollator attribute)": [[5, "scformer.data_collator.DataCollator.sampling"]], "scformer": [[5, "module-scformer"]], "scformer.data_collator": [[5, "module-scformer.data_collator"]], "scformer.data_sampler": [[5, "module-scformer.data_sampler"]], "scformer.preprocess": [[5, "module-scformer.preprocess"]], "scformer.trainer": [[5, "module-scformer.trainer"]], "adversarialdiscriminator (class in scformer.model.model)": [[6, "scformer.model.model.AdversarialDiscriminator"]], "batchlabelencoder (class in scformer.model.model)": [[6, "scformer.model.model.BatchLabelEncoder"]], "categoryvalueencoder (class in scformer.model.model)": [[6, "scformer.model.model.CategoryValueEncoder"]], "clsdecoder (class in scformer.model.generation_model)": [[6, "scformer.model.generation_model.ClsDecoder"]], "clsdecoder (class in scformer.model.model)": [[6, "scformer.model.model.ClsDecoder"]], "continuousvalueencoder (class in scformer.model.model)": [[6, "scformer.model.model.ContinuousValueEncoder"]], "domainspecificbatchnorm1d (class in scformer.model.dsbn)": [[6, "scformer.model.dsbn.DomainSpecificBatchNorm1d"]], "domainspecificbatchnorm2d (class in scformer.model.dsbn)": [[6, "scformer.model.dsbn.DomainSpecificBatchNorm2d"]], "exprdecoder (class in scformer.model.model)": [[6, "scformer.model.model.ExprDecoder"]], "geneencoder (class in scformer.model.generation_model)": [[6, "scformer.model.generation_model.GeneEncoder"]], "geneencoder (class in scformer.model.model)": [[6, "scformer.model.model.GeneEncoder"]], "gradreverse (class in scformer.model.grad_reverse)": [[6, "scformer.model.grad_reverse.GradReverse"]], "mvcdecoder (class in scformer.model.generation_model)": [[6, "scformer.model.generation_model.MVCDecoder"]], "mvcdecoder (class in scformer.model.model)": [[6, "scformer.model.model.MVCDecoder"]], "positionalencoding (class in scformer.model.generation_model)": [[6, "scformer.model.generation_model.PositionalEncoding"]], "positionalencoding (class in scformer.model.model)": [[6, "scformer.model.model.PositionalEncoding"]], "similarity (class in scformer.model.generation_model)": [[6, "scformer.model.generation_model.Similarity"]], "similarity (class in scformer.model.model)": [[6, "scformer.model.model.Similarity"]], "transformergenerator (class in scformer.model.generation_model)": [[6, "scformer.model.generation_model.TransformerGenerator"]], "transformermodel (class in scformer.model.model)": [[6, "scformer.model.model.TransformerModel"]], "valueencoding (class in scformer.model.generation_model)": [[6, "scformer.model.generation_model.ValueEncoding"]], "backward() (scformer.model.grad_reverse.gradreverse static method)": [[6, "scformer.model.grad_reverse.GradReverse.backward"]], "bn_handle (scformer.model.dsbn.domainspecificbatchnorm1d property)": [[6, "scformer.model.dsbn.DomainSpecificBatchNorm1d.bn_handle"]], "bn_handle (scformer.model.dsbn.domainspecificbatchnorm2d property)": [[6, "scformer.model.dsbn.DomainSpecificBatchNorm2d.bn_handle"]], "encode_batch() (scformer.model.generation_model.transformergenerator method)": [[6, "scformer.model.generation_model.TransformerGenerator.encode_batch"]], "encode_batch() (scformer.model.model.transformermodel method)": [[6, "scformer.model.model.TransformerModel.encode_batch"]], "forward() (scformer.model.generation_model.clsdecoder method)": [[6, "scformer.model.generation_model.ClsDecoder.forward"]], "forward() (scformer.model.generation_model.geneencoder method)": [[6, "scformer.model.generation_model.GeneEncoder.forward"]], "forward() (scformer.model.generation_model.mvcdecoder method)": [[6, "scformer.model.generation_model.MVCDecoder.forward"]], "forward() (scformer.model.generation_model.positionalencoding method)": [[6, "scformer.model.generation_model.PositionalEncoding.forward"]], "forward() (scformer.model.generation_model.similarity method)": [[6, "scformer.model.generation_model.Similarity.forward"]], "forward() (scformer.model.generation_model.transformergenerator method)": [[6, "scformer.model.generation_model.TransformerGenerator.forward"]], "forward() (scformer.model.generation_model.valueencoding method)": [[6, "scformer.model.generation_model.ValueEncoding.forward"]], "forward() (scformer.model.grad_reverse.gradreverse static method)": [[6, "scformer.model.grad_reverse.GradReverse.forward"]], "forward() (scformer.model.model.adversarialdiscriminator method)": [[6, "scformer.model.model.AdversarialDiscriminator.forward"]], "forward() (scformer.model.model.batchlabelencoder method)": [[6, "scformer.model.model.BatchLabelEncoder.forward"]], "forward() (scformer.model.model.categoryvalueencoder method)": [[6, "scformer.model.model.CategoryValueEncoder.forward"]], "forward() (scformer.model.model.clsdecoder method)": [[6, "scformer.model.model.ClsDecoder.forward"]], "forward() (scformer.model.model.continuousvalueencoder method)": [[6, "scformer.model.model.ContinuousValueEncoder.forward"]], "forward() (scformer.model.model.exprdecoder method)": [[6, "scformer.model.model.ExprDecoder.forward"]], "forward() (scformer.model.model.geneencoder method)": [[6, "scformer.model.model.GeneEncoder.forward"]], "forward() (scformer.model.model.mvcdecoder method)": [[6, "scformer.model.model.MVCDecoder.forward"]], "forward() (scformer.model.model.positionalencoding method)": [[6, "scformer.model.model.PositionalEncoding.forward"]], "forward() (scformer.model.model.similarity method)": [[6, "scformer.model.model.Similarity.forward"]], "forward() (scformer.model.model.transformermodel method)": [[6, "scformer.model.model.TransformerModel.forward"]], "generate_square_subsequent_mask() (in module scformer.model.generation_model)": [[6, "scformer.model.generation_model.generate_square_subsequent_mask"]], "generate_square_subsequent_mask() (in module scformer.model.model)": [[6, "scformer.model.model.generate_square_subsequent_mask"]], "grad_reverse() (in module scformer.model.grad_reverse)": [[6, "scformer.model.grad_reverse.grad_reverse"]], "init_weights() (scformer.model.generation_model.transformergenerator method)": [[6, "scformer.model.generation_model.TransformerGenerator.init_weights"]], "init_weights() (scformer.model.model.transformermodel method)": [[6, "scformer.model.model.TransformerModel.init_weights"]], "pred_perturb() (scformer.model.generation_model.transformergenerator method)": [[6, "scformer.model.generation_model.TransformerGenerator.pred_perturb"]], "scformer.model": [[6, "module-scformer.model"]], "scformer.model.dsbn": [[6, "module-scformer.model.dsbn"]], "scformer.model.generation_model": [[6, "module-scformer.model.generation_model"]], "scformer.model.grad_reverse": [[6, "module-scformer.model.grad_reverse"]], "scformer.model.model": [[6, "module-scformer.model.model"]], "training (scformer.model.dsbn.domainspecificbatchnorm1d attribute)": [[6, "scformer.model.dsbn.DomainSpecificBatchNorm1d.training"]], "training (scformer.model.dsbn.domainspecificbatchnorm2d attribute)": [[6, "scformer.model.dsbn.DomainSpecificBatchNorm2d.training"]], "training (scformer.model.generation_model.clsdecoder attribute)": [[6, "scformer.model.generation_model.ClsDecoder.training"]], "training (scformer.model.generation_model.geneencoder attribute)": [[6, "scformer.model.generation_model.GeneEncoder.training"]], "training (scformer.model.generation_model.mvcdecoder attribute)": [[6, "scformer.model.generation_model.MVCDecoder.training"]], "training (scformer.model.generation_model.positionalencoding attribute)": [[6, "scformer.model.generation_model.PositionalEncoding.training"]], "training (scformer.model.generation_model.similarity attribute)": [[6, "scformer.model.generation_model.Similarity.training"]], "training (scformer.model.generation_model.transformergenerator attribute)": [[6, "scformer.model.generation_model.TransformerGenerator.training"]], "training (scformer.model.generation_model.valueencoding attribute)": [[6, "scformer.model.generation_model.ValueEncoding.training"]], "training (scformer.model.model.adversarialdiscriminator attribute)": [[6, "scformer.model.model.AdversarialDiscriminator.training"]], "training (scformer.model.model.batchlabelencoder attribute)": [[6, "scformer.model.model.BatchLabelEncoder.training"]], "training (scformer.model.model.categoryvalueencoder attribute)": [[6, "scformer.model.model.CategoryValueEncoder.training"]], "training (scformer.model.model.clsdecoder attribute)": [[6, "scformer.model.model.ClsDecoder.training"]], "training (scformer.model.model.continuousvalueencoder attribute)": [[6, "scformer.model.model.ContinuousValueEncoder.training"]], "training (scformer.model.model.exprdecoder attribute)": [[6, "scformer.model.model.ExprDecoder.training"]], "training (scformer.model.model.geneencoder attribute)": [[6, "scformer.model.model.GeneEncoder.training"]], "training (scformer.model.model.mvcdecoder attribute)": [[6, "scformer.model.model.MVCDecoder.training"]], "training (scformer.model.model.positionalencoding attribute)": [[6, "scformer.model.model.PositionalEncoding.training"]], "training (scformer.model.model.similarity attribute)": [[6, "scformer.model.model.Similarity.training"]], "training (scformer.model.model.transformermodel attribute)": [[6, "scformer.model.model.TransformerModel.training"]], "genetokenizer (class in scformer.tokenizer.gene_tokenizer)": [[7, "scformer.tokenizer.gene_tokenizer.GeneTokenizer"]], "genevocab (class in scformer.tokenizer.gene_tokenizer)": [[7, "scformer.tokenizer.gene_tokenizer.GeneVocab"]], "from_dict() (scformer.tokenizer.gene_tokenizer.genevocab class method)": [[7, "scformer.tokenizer.gene_tokenizer.GeneVocab.from_dict"]], "from_file() (scformer.tokenizer.gene_tokenizer.genevocab class method)": [[7, "scformer.tokenizer.gene_tokenizer.GeneVocab.from_file"]], "get_default_gene_vocab() (in module scformer.tokenizer.gene_tokenizer)": [[7, "scformer.tokenizer.gene_tokenizer.get_default_gene_vocab"]], "pad_batch() (in module scformer.tokenizer.gene_tokenizer)": [[7, "scformer.tokenizer.gene_tokenizer.pad_batch"]], "pad_token (scformer.tokenizer.gene_tokenizer.genevocab property)": [[7, "scformer.tokenizer.gene_tokenizer.GeneVocab.pad_token"]], "random_mask_value() (in module scformer.tokenizer.gene_tokenizer)": [[7, "scformer.tokenizer.gene_tokenizer.random_mask_value"]], "save_json() (scformer.tokenizer.gene_tokenizer.genevocab method)": [[7, "scformer.tokenizer.gene_tokenizer.GeneVocab.save_json"]], "scformer.tokenizer": [[7, "module-scformer.tokenizer"]], "scformer.tokenizer.gene_tokenizer": [[7, "module-scformer.tokenizer.gene_tokenizer"]], "set_default_token() (scformer.tokenizer.gene_tokenizer.genevocab method)": [[7, "scformer.tokenizer.gene_tokenizer.GeneVocab.set_default_token"]], "tokenize_and_pad_batch() (in module scformer.tokenizer.gene_tokenizer)": [[7, "scformer.tokenizer.gene_tokenizer.tokenize_and_pad_batch"]], "tokenize_batch() (in module scformer.tokenizer.gene_tokenizer)": [[7, "scformer.tokenizer.gene_tokenizer.tokenize_batch"]], "training (scformer.tokenizer.gene_tokenizer.genevocab attribute)": [[7, "scformer.tokenizer.gene_tokenizer.GeneVocab.training"]], "add_file_handler() (in module scformer.utils.util)": [[8, "scformer.utils.util.add_file_handler"]], "category_str2int() (in module scformer.utils.util)": [[8, "scformer.utils.util.category_str2int"]], "eval_scib_metrics() (in module scformer.utils.util)": [[8, "scformer.utils.util.eval_scib_metrics"]], "find_required_colums() (in module scformer.utils.util)": [[8, "scformer.utils.util.find_required_colums"]], "gene_vocabulary() (in module scformer.utils.util)": [[8, "scformer.utils.util.gene_vocabulary"]], "get_free_gpu() (in module scformer.utils.util)": [[8, "scformer.utils.util.get_free_gpu"]], "histogram() (in module scformer.utils.util)": [[8, "scformer.utils.util.histogram"]], "isnotebook() (in module scformer.utils.util)": [[8, "scformer.utils.util.isnotebook"]], "scformer.utils": [[8, "module-scformer.utils"]], "scformer.utils.util": [[8, "module-scformer.utils.util"]], "set_seed() (in module scformer.utils.util)": [[8, "scformer.utils.util.set_seed"]], "tensorlist2tensor() (in module scformer.utils.util)": [[8, "scformer.utils.util.tensorlist2tensor"]], "datacollator (class in scgpt.data_collator)": [[9, "scgpt.data_collator.DataCollator"]], "preprocessor (class in scgpt.preprocess)": [[9, "scgpt.preprocess.Preprocessor"]], "subsetsequentialsampler (class in scgpt.data_sampler)": [[9, "scgpt.data_sampler.SubsetSequentialSampler"]], "subsetsbatchsampler (class in scgpt.data_sampler)": [[9, "scgpt.data_sampler.SubsetsBatchSampler"]], "add_nums() (in module scgpt.trainer)": [[9, "scgpt.trainer.add_nums"]], "binning() (in module scgpt.preprocess)": [[9, "scgpt.preprocess.binning"]], "check_logged() (scgpt.preprocess.preprocessor method)": [[9, "scgpt.preprocess.Preprocessor.check_logged"]], "criterion_neg_log_bernoulli() (in module scgpt.loss)": [[9, "scgpt.loss.criterion_neg_log_bernoulli"]], "divide_nums() (in module scgpt.trainer)": [[9, "scgpt.trainer.divide_nums"]], "do_binning (scgpt.data_collator.datacollator attribute)": [[9, "scgpt.data_collator.DataCollator.do_binning"]], "do_mlm (scgpt.data_collator.datacollator attribute)": [[9, "scgpt.data_collator.DataCollator.do_mlm"]], "do_padding (scgpt.data_collator.datacollator attribute)": [[9, "scgpt.data_collator.DataCollator.do_padding"]], "keep_first_n_tokens (scgpt.data_collator.datacollator attribute)": [[9, "scgpt.data_collator.DataCollator.keep_first_n_tokens"]], "mask_value (scgpt.data_collator.datacollator attribute)": [[9, "scgpt.data_collator.DataCollator.mask_value"]], "masked_mse_loss() (in module scgpt.loss)": [[9, "scgpt.loss.masked_mse_loss"]], "masked_relative_error() (in module scgpt.loss)": [[9, "scgpt.loss.masked_relative_error"]], "max_length (scgpt.data_collator.datacollator attribute)": [[9, "scgpt.data_collator.DataCollator.max_length"]], "mlm_probability (scgpt.data_collator.datacollator attribute)": [[9, "scgpt.data_collator.DataCollator.mlm_probability"]], "multiply_nums() (in module scgpt.trainer)": [[9, "scgpt.trainer.multiply_nums"]], "pad_token_id (scgpt.data_collator.datacollator attribute)": [[9, "scgpt.data_collator.DataCollator.pad_token_id"]], "pad_value (scgpt.data_collator.datacollator attribute)": [[9, "scgpt.data_collator.DataCollator.pad_value"]], "sampling (scgpt.data_collator.datacollator attribute)": [[9, "scgpt.data_collator.DataCollator.sampling"]], "scgpt": [[9, "module-scgpt"]], "scgpt.data_collator": [[9, "module-scgpt.data_collator"]], "scgpt.data_sampler": [[9, "module-scgpt.data_sampler"]], "scgpt.logger": [[9, "module-scgpt.logger"]], "scgpt.loss": [[9, "module-scgpt.loss"]], "scgpt.preprocess": [[9, "module-scgpt.preprocess"]], "scgpt.trainer": [[9, "module-scgpt.trainer"]], "subtract_nums() (in module scgpt.trainer)": [[9, "scgpt.trainer.subtract_nums"]], "adversarialdiscriminator (class in scgpt.model.model)": [[10, "scgpt.model.model.AdversarialDiscriminator"]], "batchlabelencoder (class in scgpt.model.model)": [[10, "scgpt.model.model.BatchLabelEncoder"]], "categoryvalueencoder (class in scgpt.model.model)": [[10, "scgpt.model.model.CategoryValueEncoder"]], "clsdecoder (class in scgpt.model.generation_model)": [[10, "scgpt.model.generation_model.ClsDecoder"]], "clsdecoder (class in scgpt.model.model)": [[10, "scgpt.model.model.ClsDecoder"]], "continuousvalueencoder (class in scgpt.model.model)": [[10, "scgpt.model.model.ContinuousValueEncoder"]], "domainspecificbatchnorm1d (class in scgpt.model.dsbn)": [[10, "scgpt.model.dsbn.DomainSpecificBatchNorm1d"]], "domainspecificbatchnorm2d (class in scgpt.model.dsbn)": [[10, "scgpt.model.dsbn.DomainSpecificBatchNorm2d"]], "exprdecoder (class in scgpt.model.model)": [[10, "scgpt.model.model.ExprDecoder"]], "fasttransformerencoderwrapper (class in scgpt.model.model)": [[10, "scgpt.model.model.FastTransformerEncoderWrapper"]], "flashtransformerencoderlayer (class in scgpt.model.model)": [[10, "scgpt.model.model.FlashTransformerEncoderLayer"]], "geneencoder (class in scgpt.model.generation_model)": [[10, "scgpt.model.generation_model.GeneEncoder"]], "geneencoder (class in scgpt.model.model)": [[10, "scgpt.model.model.GeneEncoder"]], "gradreverse (class in scgpt.model.grad_reverse)": [[10, "scgpt.model.grad_reverse.GradReverse"]], "mvcdecoder (class in scgpt.model.model)": [[10, "scgpt.model.model.MVCDecoder"]], "positionalencoding (class in scgpt.model.generation_model)": [[10, "scgpt.model.generation_model.PositionalEncoding"]], "positionalencoding (class in scgpt.model.model)": [[10, "scgpt.model.model.PositionalEncoding"]], "similarity (class in scgpt.model.generation_model)": [[10, "scgpt.model.generation_model.Similarity"]], "similarity (class in scgpt.model.model)": [[10, "scgpt.model.model.Similarity"]], "transformergenerator (class in scgpt.model.generation_model)": [[10, "scgpt.model.generation_model.TransformerGenerator"]], "transformermodel (class in scgpt.model.model)": [[10, "scgpt.model.model.TransformerModel"]], "backward() (scgpt.model.grad_reverse.gradreverse static method)": [[10, "scgpt.model.grad_reverse.GradReverse.backward"]], "bn_handle (scgpt.model.dsbn.domainspecificbatchnorm1d property)": [[10, "scgpt.model.dsbn.DomainSpecificBatchNorm1d.bn_handle"]], "bn_handle (scgpt.model.dsbn.domainspecificbatchnorm2d property)": [[10, "scgpt.model.dsbn.DomainSpecificBatchNorm2d.bn_handle"]], "build_fast_transformer_encoder() (scgpt.model.model.fasttransformerencoderwrapper static method)": [[10, "scgpt.model.model.FastTransformerEncoderWrapper.build_fast_transformer_encoder"]], "build_length_mask() (scgpt.model.model.fasttransformerencoderwrapper static method)": [[10, "scgpt.model.model.FastTransformerEncoderWrapper.build_length_mask"]], "encode_batch() (scgpt.model.generation_model.transformergenerator method)": [[10, "scgpt.model.generation_model.TransformerGenerator.encode_batch"]], "encode_batch() (scgpt.model.model.transformermodel method)": [[10, "scgpt.model.model.TransformerModel.encode_batch"]], "forward() (scgpt.model.generation_model.clsdecoder method)": [[10, "scgpt.model.generation_model.ClsDecoder.forward"]], "forward() (scgpt.model.generation_model.geneencoder method)": [[10, "scgpt.model.generation_model.GeneEncoder.forward"]], "forward() (scgpt.model.generation_model.positionalencoding method)": [[10, "scgpt.model.generation_model.PositionalEncoding.forward"]], "forward() (scgpt.model.generation_model.similarity method)": [[10, "scgpt.model.generation_model.Similarity.forward"]], "forward() (scgpt.model.generation_model.transformergenerator method)": [[10, "scgpt.model.generation_model.TransformerGenerator.forward"]], "forward() (scgpt.model.grad_reverse.gradreverse static method)": [[10, "scgpt.model.grad_reverse.GradReverse.forward"]], "forward() (scgpt.model.model.adversarialdiscriminator method)": [[10, "scgpt.model.model.AdversarialDiscriminator.forward"]], "forward() (scgpt.model.model.batchlabelencoder method)": [[10, "scgpt.model.model.BatchLabelEncoder.forward"]], "forward() (scgpt.model.model.categoryvalueencoder method)": [[10, "scgpt.model.model.CategoryValueEncoder.forward"]], "forward() (scgpt.model.model.clsdecoder method)": [[10, "scgpt.model.model.ClsDecoder.forward"]], "forward() (scgpt.model.model.continuousvalueencoder method)": [[10, "scgpt.model.model.ContinuousValueEncoder.forward"]], "forward() (scgpt.model.model.exprdecoder method)": [[10, "scgpt.model.model.ExprDecoder.forward"]], "forward() (scgpt.model.model.fasttransformerencoderwrapper method)": [[10, "scgpt.model.model.FastTransformerEncoderWrapper.forward"]], "forward() (scgpt.model.model.flashtransformerencoderlayer method)": [[10, "scgpt.model.model.FlashTransformerEncoderLayer.forward"]], "forward() (scgpt.model.model.geneencoder method)": [[10, "scgpt.model.model.GeneEncoder.forward"]], "forward() (scgpt.model.model.mvcdecoder method)": [[10, "scgpt.model.model.MVCDecoder.forward"]], "forward() (scgpt.model.model.positionalencoding method)": [[10, "scgpt.model.model.PositionalEncoding.forward"]], "forward() (scgpt.model.model.similarity method)": [[10, "scgpt.model.model.Similarity.forward"]], "forward() (scgpt.model.model.transformermodel method)": [[10, "scgpt.model.model.TransformerModel.forward"]], "generate() (scgpt.model.model.transformermodel method)": [[10, "scgpt.model.model.TransformerModel.generate"]], "generate_square_subsequent_mask() (in module scgpt.model.generation_model)": [[10, "scgpt.model.generation_model.generate_square_subsequent_mask"]], "generate_square_subsequent_mask() (in module scgpt.model.model)": [[10, "scgpt.model.model.generate_square_subsequent_mask"]], "grad_reverse() (in module scgpt.model.grad_reverse)": [[10, "scgpt.model.grad_reverse.grad_reverse"]], "init_weights() (scgpt.model.generation_model.transformergenerator method)": [[10, "scgpt.model.generation_model.TransformerGenerator.init_weights"]], "init_weights() (scgpt.model.model.transformermodel method)": [[10, "scgpt.model.model.TransformerModel.init_weights"]], "pred_perturb() (scgpt.model.generation_model.transformergenerator method)": [[10, "scgpt.model.generation_model.TransformerGenerator.pred_perturb"]], "scgpt.model": [[10, "module-scgpt.model"]], "scgpt.model.dsbn": [[10, "module-scgpt.model.dsbn"]], "scgpt.model.generation_model": [[10, "module-scgpt.model.generation_model"]], "scgpt.model.grad_reverse": [[10, "module-scgpt.model.grad_reverse"]], "scgpt.model.model": [[10, "module-scgpt.model.model"]], "training (scgpt.model.dsbn.domainspecificbatchnorm1d attribute)": [[10, "scgpt.model.dsbn.DomainSpecificBatchNorm1d.training"]], "training (scgpt.model.dsbn.domainspecificbatchnorm2d attribute)": [[10, "scgpt.model.dsbn.DomainSpecificBatchNorm2d.training"]], "training (scgpt.model.generation_model.clsdecoder attribute)": [[10, "scgpt.model.generation_model.ClsDecoder.training"]], "training (scgpt.model.generation_model.geneencoder attribute)": [[10, "scgpt.model.generation_model.GeneEncoder.training"]], "training (scgpt.model.generation_model.positionalencoding attribute)": [[10, "scgpt.model.generation_model.PositionalEncoding.training"]], "training (scgpt.model.generation_model.similarity attribute)": [[10, "scgpt.model.generation_model.Similarity.training"]], "training (scgpt.model.generation_model.transformergenerator attribute)": [[10, "scgpt.model.generation_model.TransformerGenerator.training"]], "training (scgpt.model.model.adversarialdiscriminator attribute)": [[10, "scgpt.model.model.AdversarialDiscriminator.training"]], "training (scgpt.model.model.batchlabelencoder attribute)": [[10, "scgpt.model.model.BatchLabelEncoder.training"]], "training (scgpt.model.model.categoryvalueencoder attribute)": [[10, "scgpt.model.model.CategoryValueEncoder.training"]], "training (scgpt.model.model.clsdecoder attribute)": [[10, "scgpt.model.model.ClsDecoder.training"]], "training (scgpt.model.model.continuousvalueencoder attribute)": [[10, "scgpt.model.model.ContinuousValueEncoder.training"]], "training (scgpt.model.model.exprdecoder attribute)": [[10, "scgpt.model.model.ExprDecoder.training"]], "training (scgpt.model.model.fasttransformerencoderwrapper attribute)": [[10, "scgpt.model.model.FastTransformerEncoderWrapper.training"]], "training (scgpt.model.model.flashtransformerencoderlayer attribute)": [[10, "scgpt.model.model.FlashTransformerEncoderLayer.training"]], "training (scgpt.model.model.geneencoder attribute)": [[10, "scgpt.model.model.GeneEncoder.training"]], "training (scgpt.model.model.mvcdecoder attribute)": [[10, "scgpt.model.model.MVCDecoder.training"]], "training (scgpt.model.model.positionalencoding attribute)": [[10, "scgpt.model.model.PositionalEncoding.training"]], "training (scgpt.model.model.similarity attribute)": [[10, "scgpt.model.model.Similarity.training"]], "training (scgpt.model.model.transformermodel attribute)": [[10, "scgpt.model.model.TransformerModel.training"]], "databank (class in scgpt.scbank.databank)": [[11, "scgpt.scbank.databank.DataBank"]], "datatable (class in scgpt.scbank.data)": [[11, "scgpt.scbank.data.DataTable"]], "metainfo (class in scgpt.scbank.data)": [[11, "scgpt.scbank.data.MetaInfo"]], "setting (class in scgpt.scbank.setting)": [[11, "scgpt.scbank.setting.Setting"]], "append_study() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.append_study"]], "batch_from_anndata() (scgpt.scbank.databank.databank class method)": [[11, "scgpt.scbank.databank.DataBank.batch_from_anndata"]], "cell_ids (scgpt.scbank.data.metainfo attribute)": [[11, "scgpt.scbank.data.MetaInfo.cell_ids"]], "custom_filter() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.custom_filter"]], "data (scgpt.scbank.data.datatable attribute)": [[11, "scgpt.scbank.data.DataTable.data"]], "data_tables (scgpt.scbank.databank.databank attribute)": [[11, "scgpt.scbank.databank.DataBank.data_tables"]], "delete_study() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.delete_study"]], "filter() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.filter"]], "from_anndata() (scgpt.scbank.databank.databank class method)": [[11, "scgpt.scbank.databank.DataBank.from_anndata"]], "from_path() (scgpt.scbank.data.metainfo class method)": [[11, "scgpt.scbank.data.MetaInfo.from_path"]], "from_path() (scgpt.scbank.databank.databank class method)": [[11, "scgpt.scbank.databank.DataBank.from_path"]], "gene_vocab (scgpt.scbank.databank.databank property)": [[11, "scgpt.scbank.databank.DataBank.gene_vocab"]], "gene_vocab_md5 (scgpt.scbank.data.metainfo attribute)": [[11, "scgpt.scbank.data.MetaInfo.gene_vocab_md5"]], "immediate_save (scgpt.scbank.setting.setting attribute)": [[11, "scgpt.scbank.setting.Setting.immediate_save"]], "is_loaded (scgpt.scbank.data.datatable property)": [[11, "scgpt.scbank.data.DataTable.is_loaded"]], "link() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.link"]], "load() (scgpt.scbank.data.metainfo method)": [[11, "scgpt.scbank.data.MetaInfo.load"]], "load() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.load"]], "load_all() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.load_all"]], "load_anndata() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.load_anndata"]], "load_table() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.load_table"]], "main_data (scgpt.scbank.databank.databank property)": [[11, "scgpt.scbank.databank.DataBank.main_data"]], "main_table_key (scgpt.scbank.data.metainfo attribute)": [[11, "scgpt.scbank.data.MetaInfo.main_table_key"]], "main_table_key (scgpt.scbank.databank.databank property)": [[11, "scgpt.scbank.databank.DataBank.main_table_key"]], "max_tokenize_batch_size (scgpt.scbank.setting.setting attribute)": [[11, "scgpt.scbank.setting.Setting.max_tokenize_batch_size"]], "meta_info (scgpt.scbank.databank.databank attribute)": [[11, "scgpt.scbank.databank.DataBank.meta_info"]], "name (scgpt.scbank.data.datatable attribute)": [[11, "scgpt.scbank.data.DataTable.name"]], "on_disk_format (scgpt.scbank.data.metainfo attribute)": [[11, "scgpt.scbank.data.MetaInfo.on_disk_format"]], "on_disk_path (scgpt.scbank.data.metainfo attribute)": [[11, "scgpt.scbank.data.MetaInfo.on_disk_path"]], "remove_zero_rows (scgpt.scbank.setting.setting attribute)": [[11, "scgpt.scbank.setting.Setting.remove_zero_rows"]], "save() (scgpt.scbank.data.datatable method)": [[11, "scgpt.scbank.data.DataTable.save"]], "save() (scgpt.scbank.data.metainfo method)": [[11, "scgpt.scbank.data.MetaInfo.save"]], "save() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.save"]], "scgpt.scbank": [[11, "module-scgpt.scbank"]], "scgpt.scbank.data": [[11, "module-scgpt.scbank.data"]], "scgpt.scbank.databank": [[11, "module-scgpt.scbank.databank"]], "scgpt.scbank.monitor": [[11, "module-scgpt.scbank.monitor"]], "scgpt.scbank.setting": [[11, "module-scgpt.scbank.setting"]], "settings (scgpt.scbank.databank.databank attribute)": [[11, "scgpt.scbank.databank.DataBank.settings"]], "study_ids (scgpt.scbank.data.metainfo attribute)": [[11, "scgpt.scbank.data.MetaInfo.study_ids"]], "sync() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.sync"]], "track() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.track"]], "update_datatables() (scgpt.scbank.databank.databank method)": [[11, "scgpt.scbank.databank.DataBank.update_datatables"]], "genetokenizer (class in scgpt.tokenizer.gene_tokenizer)": [[12, "scgpt.tokenizer.gene_tokenizer.GeneTokenizer"]], "genevocab (class in scgpt.tokenizer.gene_tokenizer)": [[12, "scgpt.tokenizer.gene_tokenizer.GeneVocab"]], "from_dict() (scgpt.tokenizer.gene_tokenizer.genevocab class method)": [[12, "scgpt.tokenizer.gene_tokenizer.GeneVocab.from_dict"]], "from_file() (scgpt.tokenizer.gene_tokenizer.genevocab class method)": [[12, "scgpt.tokenizer.gene_tokenizer.GeneVocab.from_file"]], "get_default_gene_vocab() (in module scgpt.tokenizer.gene_tokenizer)": [[12, "scgpt.tokenizer.gene_tokenizer.get_default_gene_vocab"]], "pad_batch() (in module scgpt.tokenizer.gene_tokenizer)": [[12, "scgpt.tokenizer.gene_tokenizer.pad_batch"]], "pad_token (scgpt.tokenizer.gene_tokenizer.genevocab property)": [[12, "scgpt.tokenizer.gene_tokenizer.GeneVocab.pad_token"]], "random_mask_value() (in module scgpt.tokenizer.gene_tokenizer)": [[12, "scgpt.tokenizer.gene_tokenizer.random_mask_value"]], "save_json() (scgpt.tokenizer.gene_tokenizer.genevocab method)": [[12, "scgpt.tokenizer.gene_tokenizer.GeneVocab.save_json"]], "scgpt.tokenizer": [[12, "module-scgpt.tokenizer"]], "scgpt.tokenizer.gene_tokenizer": [[12, "module-scgpt.tokenizer.gene_tokenizer"]], "set_default_token() (scgpt.tokenizer.gene_tokenizer.genevocab method)": [[12, "scgpt.tokenizer.gene_tokenizer.GeneVocab.set_default_token"]], "tokenize_and_pad_batch() (in module scgpt.tokenizer.gene_tokenizer)": [[12, "scgpt.tokenizer.gene_tokenizer.tokenize_and_pad_batch"]], "tokenize_batch() (in module scgpt.tokenizer.gene_tokenizer)": [[12, "scgpt.tokenizer.gene_tokenizer.tokenize_batch"]], "training (scgpt.tokenizer.gene_tokenizer.genevocab attribute)": [[12, "scgpt.tokenizer.gene_tokenizer.GeneVocab.training"]], "mainprocessonly (class in scgpt.utils.util)": [[13, "scgpt.utils.util.MainProcessOnly"]], "add_file_handler() (in module scgpt.utils.util)": [[13, "scgpt.utils.util.add_file_handler"]], "category_str2int() (in module scgpt.utils.util)": [[13, "scgpt.utils.util.category_str2int"]], "eval_scib_metrics() (in module scgpt.utils.util)": [[13, "scgpt.utils.util.eval_scib_metrics"]], "find_required_colums() (in module scgpt.utils.util)": [[13, "scgpt.utils.util.find_required_colums"]], "gene_vocabulary() (in module scgpt.utils.util)": [[13, "scgpt.utils.util.gene_vocabulary"]], "get_free_gpu() (in module scgpt.utils.util)": [[13, "scgpt.utils.util.get_free_gpu"]], "histogram() (in module scgpt.utils.util)": [[13, "scgpt.utils.util.histogram"]], "isnotebook() (in module scgpt.utils.util)": [[13, "scgpt.utils.util.isnotebook"]], "main_process_only() (in module scgpt.utils.util)": [[13, "scgpt.utils.util.main_process_only"]], "scgpt.utils": [[13, "module-scgpt.utils"]], "scgpt.utils.util": [[13, "module-scgpt.utils.util"]], "set_seed() (in module scgpt.utils.util)": [[13, "scgpt.utils.util.set_seed"]], "tensorlist2tensor() (in module scgpt.utils.util)": [[13, "scgpt.utils.util.tensorlist2tensor"]], "test": [[14, "module-test"]]}})