Search.setIndex({"docnames": ["index", "modules", "scgpt", "scgpt.model", "scgpt.scbank", "scgpt.tokenizer", "scgpt.utils"], "filenames": ["index.rst", "modules.rst", "scgpt.rst", "scgpt.model.rst", "scgpt.scbank.rst", "scgpt.tokenizer.rst", "scgpt.utils.rst"], "titles": ["Welcome to learn_scgpt\u2019s documentation!", "scgpt", "scgpt package", "scgpt.model package", "scgpt.scbank package", "scgpt.tokenizer package", "scgpt.utils package"], "terms": {"scgpt": 0, "packag": [0, 1], "index": [0, 3, 4, 5], "modul": [0, 1], "search": 0, "page": 0, "subpackag": 1, "model": [1, 2], "submodul": 1, "dsbn": [1, 2], "generation_model": [1, 2], "grad_revers": [1, 2], "content": 1, "scbank": [1, 2], "data": [1, 2, 3, 5, 6], "databank": [1, 2], "monitor": [1, 2], "set": [1, 2, 5, 6], "token": [1, 2, 3, 4], "gene_token": [1, 2], "util": [1, 2], "config": [1, 6], "data_col": 1, "data_sampl": 1, "logger": [1, 6], "loss": 1, "preprocess": 1, "trainer": 1, "datacol": [1, 2], "do_bin": [1, 2], "do_mlm": [1, 2], "do_pad": [1, 2], "keep_first_n_token": [1, 2], "mask_valu": [1, 2, 5], "max_length": [1, 2], "mlm_probabl": [1, 2], "pad_token_id": [1, 2], "pad_valu": [1, 2, 3, 5, 6], "sampl": [1, 2], "subsetsequentialsampl": [1, 2], "subsetsbatchsampl": [1, 2], "criterion_neg_log_bernoulli": [1, 2], "masked_mse_loss": [1, 2], "masked_relative_error": [1, 2], "preprocessor": [1, 2], "check_log": [1, 2], "bin": [1, 2], "add_num": [1, 2], "divide_num": [1, 2], "multiply_num": [1, 2], "subtract_num": [1, 2], "domainspecificbatchnorm1d": [2, 3], "bn_handl": [2, 3], "train": [2, 3, 5, 6], "domainspecificbatchnorm2d": [2, 3], "clsdecod": [2, 3], "forward": [2, 3], "geneencod": [2, 3], "positionalencod": [2, 3], "similar": [2, 3], "transformergener": [2, 3], "encode_batch": [2, 3], "init_weight": [2, 3], "pred_perturb": [2, 3], "generate_square_subsequent_mask": [2, 3], "gradrevers": [2, 3], "backward": [2, 3], "adversarialdiscrimin": [2, 3], "batchlabelencod": [2, 3], "categoryvalueencod": [2, 3], "continuousvalueencod": [2, 3], "exprdecod": [2, 3], "fasttransformerencoderwrapp": [2, 3], "build_fast_transformer_encod": [2, 3], "build_length_mask": [2, 3], "flashtransformerencoderlay": [2, 3], "mvcdecod": [2, 3], "transformermodel": [2, 3], "gener": [2, 3, 6], "datat": [2, 4], "is_load": [2, 4], "name": [2, 4, 6], "save": [2, 3, 4, 5, 6], "metainfo": [2, 4], "cell_id": [2, 4], "from_path": [2, 4], "gene_vocab_md5": [2, 4], "load": [2, 4, 5, 6], "main_table_kei": [2, 4], "on_disk_format": [2, 4], "on_disk_path": [2, 4], "study_id": [2, 4], "append_studi": [2, 4], "batch_from_anndata": [2, 4], "custom_filt": [2, 4], "data_t": [2, 4], "delete_studi": [2, 4], "filter": [2, 4], "from_anndata": [2, 4], "gene_vocab": [2, 4], "link": [2, 4], "load_al": [2, 4], "load_anndata": [2, 4], "load_tabl": [2, 4], "main_data": [2, 4], "meta_info": [2, 4], "sync": [2, 3, 4], "track": [2, 4], "update_datat": [2, 4], "immediate_sav": [2, 4], "max_tokenize_batch_s": [2, 4], "remove_zero_row": [2, 4], "genetoken": [2, 5], "genevocab": [2, 4, 5], "from_dict": [2, 5], "from_fil": [2, 5], "pad_token": [2, 3, 5], "save_json": [2, 5], "set_default_token": [2, 5], "get_default_gene_vocab": [2, 5], "pad_batch": [2, 5], "random_mask_valu": [2, 5], "tokenize_and_pad_batch": [2, 5], "tokenize_batch": [2, 5], "mainprocessonli": [2, 6], "add_file_handl": [2, 6], "category_str2int": [2, 6], "eval_scib_metr": [2, 6], "find_required_colum": [2, 6], "gene_vocabulari": [2, 6], "get_free_gpu": [2, 6], "histogram": [2, 6], "isnotebook": [2, 6], "main_process_onli": [2, 6], "set_se": [2, 6], "tensorlist2tensor": [2, 6], "class": [2, 3, 4, 5, 6], "bool": [2, 3, 4, 5, 6], "true": [2, 3, 4, 5], "int": [2, 3, 4, 5, 6], "none": [2, 3, 4, 5, 6], "0": [2, 3, 4, 5], "float": [2, 3, 5], "15": [2, 5], "1": [2, 3, 5], "sourc": [2, 3, 4, 5, 6], "base": [2, 3, 4, 5, 6], "object": [2, 3, 4, 6], "collat": 2, "mask": [2, 3, 5], "valu": [2, 3, 5], "learn": 2, "task": [2, 3], "It": [2, 3], "pad": [2, 3, 5], "sequenc": [2, 3], "maximum": [2, 5], "length": [2, 5], "batch": [2, 3, 5, 6], "gene": [2, 3, 4, 5, 6], "express": [2, 5], "paramet": [2, 3, 4, 5, 6], "whether": [2, 3, 4, 5, 6], "max": 2, "option": [2, 3, 6], "id": [2, 3, 4, 5, 6], "us": [2, 3, 4, 6], "thi": [2, 3, 4, 6], "i": [2, 3, 4], "requir": [2, 3, 6], "do": 2, "mlm": 2, "probabl": 2, "fill": 2, "postion": 2, "ar": [2, 3, 6], "instead": [2, 3, 4], "truncat": 2, "number": [2, 3, 5], "begin": 2, "keep": 2, "unchang": [2, 5], "from": [2, 3, 4, 5], "when": [2, 3], "special": [2, 5], "have": [2, 3, 4], "been": [2, 4], "ad": 2, "default": [2, 3, 4, 5], "indic": [2, 4, 5], "sampler": 2, "element": 2, "sequenti": 2, "given": [2, 3], "list": [2, 4, 5, 6], "without": 2, "replac": [2, 4], "subset": 2, "batch_siz": [2, 3, 5], "intra_subset_shuffl": 2, "inter_subset_shuffl": 2, "drop_last": 2, "fals": [2, 3, 4, 5, 6], "each": [2, 3], "repres": [2, 3], "randomli": [2, 5], "onli": [2, 3, 4], "contain": [2, 4, 5], "singl": [2, 4], "scenario": 2, "where": 2, "need": [2, 3], "drawn": 2, "multipl": [2, 4], "separ": 2, "A": [2, 5], "size": [2, 3, 6], "mini": 2, "If": [2, 3, 4], "shuffl": 2, "within": [2, 3], "order": 2, "drop": 2, "last": 2, "its": 2, "would": 2, "less": 2, "than": 2, "input": [2, 3, 6], "tensor": [2, 3, 5], "target": 2, "comput": [2, 3, 4], "neg": 2, "log": 2, "likelihood": 2, "bernoulli": 2, "distribut": 2, "_description_": 2, "return": [2, 3, 4, 5, 6], "mse": 2, "between": 2, "_summary_": 2, "torch": [2, 3, 5], "type": [2, 3, 4, 5, 6], "longtensor": 2, "rel": 2, "error": 2, "use_kei": 2, "str": [2, 3, 4, 5, 6], "filter_gene_by_count": 2, "filter_cell_by_count": 2, "normalize_tot": 2, "10000": 2, "result_normed_kei": 2, "x_norm": 2, "log1p": 2, "result_log1p_kei": 2, "x_log1p": 2, "subset_hvg": 2, "hvg_use_kei": 2, "hvg_flavor": 2, "seurat_v3": 2, "result_binned_kei": 2, "x_bin": 2, "prepar": 2, "valid": [2, 4, 6], "test": 2, "split": 2, "normal": [2, 3], "raw": [2, 3], "other": [2, 3], "transform": [2, 3], "preset": 2, "format": [2, 4], "adata": [2, 4, 6], "anndata": [2, 4, 6], "obs_kei": 2, "check": [2, 4, 6], "alreadi": 2, "arg": [2, 3], "The": [2, 3, 4, 5, 6], "kei": [2, 3, 4, 6], "ob": 2, "inform": [2, 3], "highli": 2, "variabl": 2, "select": 2, "step": [2, 3], "row": 2, "ndarrai": [2, 5, 6], "n_bin": 2, "num1": 2, "num2": 2, "method": [2, 4], "add": [2, 6], "two": 2, "first": [2, 3, 6], "second": [2, 3], "sum": 2, "divid": 2, "answer": 2, "multipli": 2, "product": [2, 3], "subtract": 2, "num_featur": 3, "num_domain": 3, "ep": 3, "1e": 3, "05": 3, "momentum": 3, "affin": 3, "track_running_stat": 3, "_domainspecificbatchnorm": 3, "properti": [3, 4, 5], "d_model": 3, "n_cl": 3, "nlayer": 3, "3": 3, "activ": 3, "callabl": [3, 4], "nn": 3, "relu": 3, "decod": 3, "classif": 3, "x": [3, 4], "shape": [3, 5], "embsiz": 3, "num_embed": 3, "embedding_dim": 3, "padding_idx": 3, "defin": 3, "perform": [3, 4], "everi": 3, "call": 3, "should": [3, 5], "overridden": 3, "all": [3, 4, 5], "subclass": 3, "although": 3, "recip": 3, "pass": 3, "function": [3, 4, 6], "one": 3, "instanc": [3, 4], "afterward": 3, "sinc": [3, 4], "former": 3, "take": 3, "care": 3, "run": 3, "regist": 3, "hook": 3, "while": 3, "latter": 3, "silent": 3, "ignor": 3, "them": 3, "dropout": 3, "max_len": [3, 5], "5000": 3, "seq_len": 3, "temp": 3, "dot": 3, "cosin": 3, "y": 3, "ntoken": 3, "nhead": 3, "d_hid": 3, "nlayers_cl": 3, "vocab": [3, 4, 5], "ani": 3, "5": 3, "pert_pad_id": 3, "2": 3, "do_mvc": 3, "domain_spec_batchnorm": 3, "cell_emb_styl": 3, "cl": [3, 5], "mvc_decoder_styl": 3, "inner": 3, "ecs_threshold": 3, "explicit_zero_prob": 3, "use_fast_transform": 3, "fast_transformer_backend": 3, "flash": 3, "pre_norm": 3, "src": 3, "src_key_padding_mask": 3, "output_to_cpu": 3, "n": 3, "output": 3, "input_pert_flag": 3, "cce": 3, "mvc": 3, "ec": 3, "do_sampl": 3, "map": [3, 4, 5], "celltyp": [3, 6], "contrast": 3, "cell": [3, 4], "embed": 3, "predict": 3, "elast": 3, "dict": [3, 4, 5, 6], "batch_data": 3, "include_zero_gen": [3, 5], "wise": 3, "amp": 3, "dictionari": [3, 5, 6], "sz": 3, "an": [3, 4], "upper": 3, "triangular": 3, "matrix": 3, "inf": 3, "zero": [3, 5], "diag": 3, "kwarg": [3, 5], "static": 3, "ctx": 3, "grad_output": 3, "formula": 3, "differenti": 3, "oper": 3, "mode": 3, "automat": [3, 4, 6], "alia": 3, "vjp": 3, "must": 3, "accept": 3, "context": 3, "argument": 3, "follow": [3, 4], "mani": 3, "non": [3, 5], "were": 3, "gradient": 3, "w": 3, "r": 3, "t": 3, "correspond": 3, "grad": 3, "you": 3, "can": [3, 4], "just": 3, "retriev": 3, "dure": 3, "also": [3, 4], "ha": 3, "attribut": [3, 4], "needs_input_grad": 3, "tupl": [3, 5, 6], "boolean": 3, "e": 3, "g": 3, "lambd": 3, "store": 3, "arbitrari": 3, "directli": 3, "though": 3, "current": [3, 4], "enforc": 3, "compat": 3, "either": [3, 5], "save_for_backward": 3, "thei": 3, "intend": 3, "equival": 3, "save_for_forward": 3, "jvp": 3, "leakyrelu": 3, "reverse_grad": 3, "discrimin": 3, "adversari": 3, "correct": 3, "max_valu": 3, "512": 3, "encod": 3, "real": 3, "vector": 3, "neural": 3, "net": 3, "project": 3, "use_batch_label": 3, "booltensor": 3, "lengthmask": 3, "dim_feedforward": 3, "2048": 3, "layer_norm_ep": 3, "batch_first": 3, "devic": 3, "dtype": 3, "norm_schem": 3, "post": 3, "transformerencoderlay": 3, "made": [3, 4], "up": 3, "self": [3, 4, 5], "attn": 3, "feedforward": 3, "network": 3, "modifi": 3, "support": 3, "flashattent": 3, "expect": 3, "featur": 3, "head": 3, "multiheadattent": 3, "dimens": 3, "intermedi": 3, "layer": [3, 4], "gelu": 3, "compon": 3, "provid": [3, 4], "seq": 3, "exampl": 3, "encoder_lay": 3, "8": 3, "rand": 3, "10": 3, "32": 3, "out": 3, "altern": 3, "src_mask": 3, "through": 3, "per": 3, "see": [3, 4], "doc": 3, "arch_styl": 3, "query_activ": 3, "sigmoid": 3, "hidden_activ": 3, "prelu": 3, "There": 3, "actual": 3, "three": 3, "wai": 3, "make": 3, "start": 3, "gene_emb": 3, "query_vec": 3, "cell_emb": 3, "queri": 3, "vec": 3, "most": 3, "sens": 3, "space": 3, "look": [3, 4], "differ": 3, "cel_emb": 3, "explicit": 3, "interact": 3, "fc": 3, "benifit": 3, "smaller": 3, "like": [3, 5], "bottl": 3, "neck": 3, "For": 3, "64": 3, "dim": 3, "note": [3, 4, 6], "import": 3, "emb": 3, "becaus": 3, "sure": 3, "mix": 3, "place": 3, "get": [3, 5], "bare": 3, "mind": 3, "avoid": 3, "short": 3, "cut": 3, "form": 3, "guess": 3, "better": 3, "4": [3, 6], "todo": 3, "even": 3, "try": 3, "detach": 3, "do_dab": 3, "num_batch_label": 3, "input_emb_styl": 3, "continu": 3, "n_input_bin": 3, "batch_label": 3, "time_step": 3, "return_np": 3, "n_batch_label": 3, "move": 3, "cpu": 3, "time": [3, 6], "along": 3, "dimenst": 3, "numpi": 3, "arrai": [3, 5], "label": [3, 6], "gen_it": 3, "iter": 3, "dataset": 4, "structur": 4, "tabl": 4, "path": [4, 5, 6], "liter": 4, "json": [4, 5], "parquet": 4, "meta": 4, "info": 4, "directori": [4, 6], "classmethod": [4, 5], "creat": 4, "same": 4, "factori": 4, "dataclass": 4, "initvar": 4, "larg": 4, "scale": 4, "studi": 4, "http": 4, "github": 4, "com": 4, "subercui": 4, "releas": 4, "study_data": 4, "append": 4, "field": 4, "filter_func": 4, "inplac": 4, "appli": 4, "custom": 4, "delet": 4, "token_col": 4, "annot": 4, "file": [4, 5, 6], "vocabulari": [4, 5], "obsm": 4, "main": 4, "column": [4, 6], "immedi": 4, "after": 4, "creation": 4, "md5sum": 4, "record": 4, "manifest": 4, "match": 4, "integ": 4, "data_path": 4, "usual": 4, "later": 4, "design": 4, "work": 4, "memori": 4, "doe": 4, "well": 4, "data_kei": 4, "convert": 4, "table_nam": 4, "exist": 4, "attr_kei": 4, "includ": [4, 6], "updat": [4, 6], "overwrit": 4, "chang": 4, "disk": 4, "new_tabl": 4, "use_nam": 4, "new": 4, "Will": 4, "arrr": 4, "1000000": 4, "configur": 4, "pretrainedtoken": 5, "gene_list_or_vocab": 5, "special_first": 5, "default_token": 5, "token2idx": 5, "file_path": 5, "pickl": 5, "consist": 5, "symbol": 5, "cls_append": 5, "gene_id": 5, "count": 5, "mask_ratio": 5, "n_featur": 5, "ratio": 5, "kept": 5, "append_cl": 5, "cls_token": 5, "return_pt": 5, "cls_id": 5, "equal": 5, "obj": 6, "log_file_path": 6, "handler": 6, "category_str": 6, "batch_kei": 6, "str_batch": 6, "label_kei": 6, "configs_dir": 6, "find": 6, "str_celltyp": 6, "experiment": 6, "ask": 6, "user": 6, "next": 6, "union": 6, "celltype_col": 6, "str_celltype_col": 6, "gene_col": 6, "batch_col": 6, "name2id": 6, "id2nam": 6, "color": 6, "blue": 6, "red": 6, "figsiz": 6, "9": 6, "titl": 6, "show": 6, "ax": 6, "plot": 6, "np": 6, "figur": 6, "excut": 6, "jupyt": 6, "notebook": 6, "func": 6, "seed": 6, "random": 6, "tensorlist": 6}, "objects": {"": [[2, 0, 0, "-", "scgpt"]], "scgpt": [[2, 0, 0, "-", "data_collator"], [2, 0, 0, "-", "data_sampler"], [2, 0, 0, "-", "logger"], [2, 0, 0, "-", "loss"], [3, 0, 0, "-", "model"], [2, 0, 0, "-", "preprocess"], [4, 0, 0, "-", "scbank"], [5, 0, 0, "-", "tokenizer"], [2, 0, 0, "-", "trainer"], [6, 0, 0, "-", "utils"]], "scgpt.data_collator": [[2, 1, 1, "", "DataCollator"]], "scgpt.data_collator.DataCollator": [[2, 2, 1, "", "do_binning"], [2, 2, 1, "", "do_mlm"], [2, 2, 1, "", "do_padding"], [2, 2, 1, "", "keep_first_n_tokens"], [2, 2, 1, "", "mask_value"], [2, 2, 1, "", "max_length"], [2, 2, 1, "", "mlm_probability"], [2, 2, 1, "", "pad_token_id"], [2, 2, 1, "", "pad_value"], [2, 2, 1, "", "sampling"]], "scgpt.data_sampler": [[2, 1, 1, "", "SubsetSequentialSampler"], [2, 1, 1, "", "SubsetsBatchSampler"]], "scgpt.loss": [[2, 3, 1, "", "criterion_neg_log_bernoulli"], [2, 3, 1, "", "masked_mse_loss"], [2, 3, 1, "", "masked_relative_error"]], "scgpt.model": [[3, 0, 0, "-", "dsbn"], [3, 0, 0, "-", "generation_model"], [3, 0, 0, "-", "grad_reverse"], [3, 0, 0, "-", "model"]], "scgpt.model.dsbn": [[3, 1, 1, "", "DomainSpecificBatchNorm1d"], [3, 1, 1, "", "DomainSpecificBatchNorm2d"]], "scgpt.model.dsbn.DomainSpecificBatchNorm1d": [[3, 4, 1, "", "bn_handle"], [3, 2, 1, "", "training"]], "scgpt.model.dsbn.DomainSpecificBatchNorm2d": [[3, 4, 1, "", "bn_handle"], [3, 2, 1, "", "training"]], "scgpt.model.generation_model": [[3, 1, 1, "", "ClsDecoder"], [3, 1, 1, "", "GeneEncoder"], [3, 1, 1, "", "PositionalEncoding"], [3, 1, 1, "", "Similarity"], [3, 1, 1, "", "TransformerGenerator"], [3, 3, 1, "", "generate_square_subsequent_mask"]], "scgpt.model.generation_model.ClsDecoder": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.generation_model.GeneEncoder": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.generation_model.PositionalEncoding": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.generation_model.Similarity": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.generation_model.TransformerGenerator": [[3, 5, 1, "", "encode_batch"], [3, 5, 1, "", "forward"], [3, 5, 1, "", "init_weights"], [3, 5, 1, "", "pred_perturb"], [3, 2, 1, "", "training"]], "scgpt.model.grad_reverse": [[3, 1, 1, "", "GradReverse"], [3, 3, 1, "", "grad_reverse"]], "scgpt.model.grad_reverse.GradReverse": [[3, 5, 1, "", "backward"], [3, 5, 1, "", "forward"]], "scgpt.model.model": [[3, 1, 1, "", "AdversarialDiscriminator"], [3, 1, 1, "", "BatchLabelEncoder"], [3, 1, 1, "", "CategoryValueEncoder"], [3, 1, 1, "", "ClsDecoder"], [3, 1, 1, "", "ContinuousValueEncoder"], [3, 1, 1, "", "ExprDecoder"], [3, 1, 1, "", "FastTransformerEncoderWrapper"], [3, 1, 1, "", "FlashTransformerEncoderLayer"], [3, 1, 1, "", "GeneEncoder"], [3, 1, 1, "", "MVCDecoder"], [3, 1, 1, "", "PositionalEncoding"], [3, 1, 1, "", "Similarity"], [3, 1, 1, "", "TransformerModel"], [3, 3, 1, "", "generate_square_subsequent_mask"]], "scgpt.model.model.AdversarialDiscriminator": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.BatchLabelEncoder": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.CategoryValueEncoder": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.ClsDecoder": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.ContinuousValueEncoder": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.ExprDecoder": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.FastTransformerEncoderWrapper": [[3, 5, 1, "", "build_fast_transformer_encoder"], [3, 5, 1, "", "build_length_mask"], [3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.FlashTransformerEncoderLayer": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.GeneEncoder": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.MVCDecoder": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.PositionalEncoding": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.Similarity": [[3, 5, 1, "", "forward"], [3, 2, 1, "", "training"]], "scgpt.model.model.TransformerModel": [[3, 5, 1, "", "encode_batch"], [3, 5, 1, "", "forward"], [3, 5, 1, "", "generate"], [3, 5, 1, "", "init_weights"], [3, 2, 1, "", "training"]], "scgpt.preprocess": [[2, 1, 1, "", "Preprocessor"], [2, 3, 1, "", "binning"]], "scgpt.preprocess.Preprocessor": [[2, 5, 1, "", "check_logged"]], "scgpt.scbank": [[4, 0, 0, "-", "data"], [4, 0, 0, "-", "databank"], [4, 0, 0, "-", "monitor"], [4, 0, 0, "-", "setting"]], "scgpt.scbank.data": [[4, 1, 1, "", "DataTable"], [4, 1, 1, "", "MetaInfo"]], "scgpt.scbank.data.DataTable": [[4, 2, 1, "", "data"], [4, 4, 1, "", "is_loaded"], [4, 2, 1, "", "name"], [4, 5, 1, "", "save"]], "scgpt.scbank.data.MetaInfo": [[4, 2, 1, "", "cell_ids"], [4, 5, 1, "", "from_path"], [4, 2, 1, "", "gene_vocab_md5"], [4, 5, 1, "", "load"], [4, 2, 1, "", "main_table_key"], [4, 2, 1, "", "on_disk_format"], [4, 2, 1, "", "on_disk_path"], [4, 5, 1, "", "save"], [4, 2, 1, "", "study_ids"]], "scgpt.scbank.databank": [[4, 1, 1, "", "DataBank"]], "scgpt.scbank.databank.DataBank": [[4, 5, 1, "", "append_study"], [4, 5, 1, "", "batch_from_anndata"], [4, 5, 1, "", "custom_filter"], [4, 2, 1, "", "data_tables"], [4, 5, 1, "", "delete_study"], [4, 5, 1, "", "filter"], [4, 5, 1, "", "from_anndata"], [4, 5, 1, "", "from_path"], [4, 4, 1, "", "gene_vocab"], [4, 5, 1, "", "link"], [4, 5, 1, "", "load"], [4, 5, 1, "", "load_all"], [4, 5, 1, "", "load_anndata"], [4, 5, 1, "", "load_table"], [4, 4, 1, "", "main_data"], [4, 4, 1, "", "main_table_key"], [4, 2, 1, "", "meta_info"], [4, 5, 1, "", "save"], [4, 2, 1, "", "settings"], [4, 5, 1, "", "sync"], [4, 5, 1, "", "track"], [4, 5, 1, "", "update_datatables"]], "scgpt.scbank.setting": [[4, 1, 1, "", "Setting"]], "scgpt.scbank.setting.Setting": [[4, 2, 1, "", "immediate_save"], [4, 2, 1, "", "max_tokenize_batch_size"], [4, 2, 1, "", "remove_zero_rows"]], "scgpt.tokenizer": [[5, 0, 0, "-", "gene_tokenizer"]], "scgpt.tokenizer.gene_tokenizer": [[5, 1, 1, "", "GeneTokenizer"], [5, 1, 1, "", "GeneVocab"], [5, 3, 1, "", "get_default_gene_vocab"], [5, 3, 1, "", "pad_batch"], [5, 3, 1, "", "random_mask_value"], [5, 3, 1, "", "tokenize_and_pad_batch"], [5, 3, 1, "", "tokenize_batch"]], "scgpt.tokenizer.gene_tokenizer.GeneVocab": [[5, 5, 1, "", "from_dict"], [5, 5, 1, "", "from_file"], [5, 4, 1, "", "pad_token"], [5, 5, 1, "", "save_json"], [5, 5, 1, "", "set_default_token"], [5, 2, 1, "", "training"]], "scgpt.trainer": [[2, 3, 1, "", "add_nums"], [2, 3, 1, "", "divide_nums"], [2, 3, 1, "", "multiply_nums"], [2, 3, 1, "", "subtract_nums"]], "scgpt.utils": [[6, 0, 0, "-", "util"]], "scgpt.utils.util": [[6, 1, 1, "", "MainProcessOnly"], [6, 3, 1, "", "add_file_handler"], [6, 3, 1, "", "category_str2int"], [6, 3, 1, "", "eval_scib_metrics"], [6, 3, 1, "", "find_required_colums"], [6, 3, 1, "", "gene_vocabulary"], [6, 3, 1, "", "get_free_gpu"], [6, 3, 1, "", "histogram"], [6, 3, 1, "", "isnotebook"], [6, 3, 1, "", "main_process_only"], [6, 3, 1, "", "set_seed"], [6, 3, 1, "", "tensorlist2tensor"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:property", "5": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"]}, "titleterms": {"welcom": 0, "learn_scgpt": 0, "": 0, "document": 0, "content": [0, 2, 3, 4, 5, 6], "indic": 0, "tabl": 0, "scgpt": [1, 2, 3, 4, 5, 6], "packag": [2, 3, 4, 5, 6], "subpackag": 2, "submodul": [2, 3, 4, 5, 6], "config": 2, "modul": [2, 3, 4, 5, 6], "data_col": 2, "data_sampl": 2, "logger": 2, "loss": 2, "preprocess": 2, "trainer": 2, "model": 3, "dsbn": 3, "generation_model": 3, "grad_revers": 3, "scbank": 4, "data": 4, "databank": 4, "monitor": 4, "set": 4, "token": 5, "gene_token": 5, "util": 6}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Welcome to learn_scgpt\u2019s documentation!": [[0, "welcome-to-learn-scgpt-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "scgpt": [[1, "scgpt"]], "scgpt package": [[2, "scgpt-package"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "scgpt.config module": [[2, "scgpt-config-module"]], "scgpt.data_collator module": [[2, "module-scgpt.data_collator"]], "scgpt.data_sampler module": [[2, "module-scgpt.data_sampler"]], "scgpt.logger module": [[2, "module-scgpt.logger"]], "scgpt.loss module": [[2, "module-scgpt.loss"]], "scgpt.preprocess module": [[2, "module-scgpt.preprocess"]], "scgpt.trainer module": [[2, "module-scgpt.trainer"]], "Module contents": [[2, "module-scgpt"], [3, "module-scgpt.model"], [4, "module-scgpt.scbank"], [5, "module-scgpt.tokenizer"], [6, "module-scgpt.utils"]], "scgpt.model package": [[3, "scgpt-model-package"]], "scgpt.model.dsbn module": [[3, "module-scgpt.model.dsbn"]], "scgpt.model.generation_model module": [[3, "module-scgpt.model.generation_model"]], "scgpt.model.grad_reverse module": [[3, "module-scgpt.model.grad_reverse"]], "scgpt.model.model module": [[3, "module-scgpt.model.model"]], "scgpt.scbank package": [[4, "scgpt-scbank-package"]], "scgpt.scbank.data module": [[4, "module-scgpt.scbank.data"]], "scgpt.scbank.databank module": [[4, "module-scgpt.scbank.databank"]], "scgpt.scbank.monitor module": [[4, "module-scgpt.scbank.monitor"]], "scgpt.scbank.setting module": [[4, "module-scgpt.scbank.setting"]], "scgpt.tokenizer package": [[5, "scgpt-tokenizer-package"]], "scgpt.tokenizer.gene_tokenizer module": [[5, "module-scgpt.tokenizer.gene_tokenizer"]], "scgpt.utils package": [[6, "scgpt-utils-package"]], "scgpt.utils.util module": [[6, "module-scgpt.utils.util"]]}, "indexentries": {"datacollator (class in scgpt.data_collator)": [[2, "scgpt.data_collator.DataCollator"]], "preprocessor (class in scgpt.preprocess)": [[2, "scgpt.preprocess.Preprocessor"]], "subsetsequentialsampler (class in scgpt.data_sampler)": [[2, "scgpt.data_sampler.SubsetSequentialSampler"]], "subsetsbatchsampler (class in scgpt.data_sampler)": [[2, "scgpt.data_sampler.SubsetsBatchSampler"]], "add_nums() (in module scgpt.trainer)": [[2, "scgpt.trainer.add_nums"]], "binning() (in module scgpt.preprocess)": [[2, "scgpt.preprocess.binning"]], "check_logged() (scgpt.preprocess.preprocessor method)": [[2, "scgpt.preprocess.Preprocessor.check_logged"]], "criterion_neg_log_bernoulli() (in module scgpt.loss)": [[2, "scgpt.loss.criterion_neg_log_bernoulli"]], "divide_nums() (in module scgpt.trainer)": [[2, "scgpt.trainer.divide_nums"]], "do_binning (scgpt.data_collator.datacollator attribute)": [[2, "scgpt.data_collator.DataCollator.do_binning"]], "do_mlm (scgpt.data_collator.datacollator attribute)": [[2, "scgpt.data_collator.DataCollator.do_mlm"]], "do_padding (scgpt.data_collator.datacollator attribute)": [[2, "scgpt.data_collator.DataCollator.do_padding"]], "keep_first_n_tokens (scgpt.data_collator.datacollator attribute)": [[2, "scgpt.data_collator.DataCollator.keep_first_n_tokens"]], "mask_value (scgpt.data_collator.datacollator attribute)": [[2, "scgpt.data_collator.DataCollator.mask_value"]], "masked_mse_loss() (in module scgpt.loss)": [[2, "scgpt.loss.masked_mse_loss"]], "masked_relative_error() (in module scgpt.loss)": [[2, "scgpt.loss.masked_relative_error"]], "max_length (scgpt.data_collator.datacollator attribute)": [[2, "scgpt.data_collator.DataCollator.max_length"]], "mlm_probability (scgpt.data_collator.datacollator attribute)": [[2, "scgpt.data_collator.DataCollator.mlm_probability"]], "module": [[2, "module-scgpt"], [2, "module-scgpt.data_collator"], [2, "module-scgpt.data_sampler"], [2, "module-scgpt.logger"], [2, "module-scgpt.loss"], [2, "module-scgpt.preprocess"], [2, "module-scgpt.trainer"], [3, "module-scgpt.model"], [3, "module-scgpt.model.dsbn"], [3, "module-scgpt.model.generation_model"], [3, "module-scgpt.model.grad_reverse"], [3, "module-scgpt.model.model"], [4, "module-scgpt.scbank"], [4, "module-scgpt.scbank.data"], [4, "module-scgpt.scbank.databank"], [4, "module-scgpt.scbank.monitor"], [4, "module-scgpt.scbank.setting"], [5, "module-scgpt.tokenizer"], [5, "module-scgpt.tokenizer.gene_tokenizer"], [6, "module-scgpt.utils"], [6, "module-scgpt.utils.util"]], "multiply_nums() (in module scgpt.trainer)": [[2, "scgpt.trainer.multiply_nums"]], "pad_token_id (scgpt.data_collator.datacollator attribute)": [[2, "scgpt.data_collator.DataCollator.pad_token_id"]], "pad_value (scgpt.data_collator.datacollator attribute)": [[2, "scgpt.data_collator.DataCollator.pad_value"]], "sampling (scgpt.data_collator.datacollator attribute)": [[2, "scgpt.data_collator.DataCollator.sampling"]], "scgpt": [[2, "module-scgpt"]], "scgpt.data_collator": [[2, "module-scgpt.data_collator"]], "scgpt.data_sampler": [[2, "module-scgpt.data_sampler"]], "scgpt.logger": [[2, "module-scgpt.logger"]], "scgpt.loss": [[2, "module-scgpt.loss"]], "scgpt.preprocess": [[2, "module-scgpt.preprocess"]], "scgpt.trainer": [[2, "module-scgpt.trainer"]], "subtract_nums() (in module scgpt.trainer)": [[2, "scgpt.trainer.subtract_nums"]], "adversarialdiscriminator (class in scgpt.model.model)": [[3, "scgpt.model.model.AdversarialDiscriminator"]], "batchlabelencoder (class in scgpt.model.model)": [[3, "scgpt.model.model.BatchLabelEncoder"]], "categoryvalueencoder (class in scgpt.model.model)": [[3, "scgpt.model.model.CategoryValueEncoder"]], "clsdecoder (class in scgpt.model.generation_model)": [[3, "scgpt.model.generation_model.ClsDecoder"]], "clsdecoder (class in scgpt.model.model)": [[3, "scgpt.model.model.ClsDecoder"]], "continuousvalueencoder (class in scgpt.model.model)": [[3, "scgpt.model.model.ContinuousValueEncoder"]], "domainspecificbatchnorm1d (class in scgpt.model.dsbn)": [[3, "scgpt.model.dsbn.DomainSpecificBatchNorm1d"]], "domainspecificbatchnorm2d (class in scgpt.model.dsbn)": [[3, "scgpt.model.dsbn.DomainSpecificBatchNorm2d"]], "exprdecoder (class in scgpt.model.model)": [[3, "scgpt.model.model.ExprDecoder"]], "fasttransformerencoderwrapper (class in scgpt.model.model)": [[3, "scgpt.model.model.FastTransformerEncoderWrapper"]], "flashtransformerencoderlayer (class in scgpt.model.model)": [[3, "scgpt.model.model.FlashTransformerEncoderLayer"]], "geneencoder (class in scgpt.model.generation_model)": [[3, "scgpt.model.generation_model.GeneEncoder"]], "geneencoder (class in scgpt.model.model)": [[3, "scgpt.model.model.GeneEncoder"]], "gradreverse (class in scgpt.model.grad_reverse)": [[3, "scgpt.model.grad_reverse.GradReverse"]], "mvcdecoder (class in scgpt.model.model)": [[3, "scgpt.model.model.MVCDecoder"]], "positionalencoding (class in scgpt.model.generation_model)": [[3, "scgpt.model.generation_model.PositionalEncoding"]], "positionalencoding (class in scgpt.model.model)": [[3, "scgpt.model.model.PositionalEncoding"]], "similarity (class in scgpt.model.generation_model)": [[3, "scgpt.model.generation_model.Similarity"]], "similarity (class in scgpt.model.model)": [[3, "scgpt.model.model.Similarity"]], "transformergenerator (class in scgpt.model.generation_model)": [[3, "scgpt.model.generation_model.TransformerGenerator"]], "transformermodel (class in scgpt.model.model)": [[3, "scgpt.model.model.TransformerModel"]], "backward() (scgpt.model.grad_reverse.gradreverse static method)": [[3, "scgpt.model.grad_reverse.GradReverse.backward"]], "bn_handle (scgpt.model.dsbn.domainspecificbatchnorm1d property)": [[3, "scgpt.model.dsbn.DomainSpecificBatchNorm1d.bn_handle"]], "bn_handle (scgpt.model.dsbn.domainspecificbatchnorm2d property)": [[3, "scgpt.model.dsbn.DomainSpecificBatchNorm2d.bn_handle"]], "build_fast_transformer_encoder() (scgpt.model.model.fasttransformerencoderwrapper static method)": [[3, "scgpt.model.model.FastTransformerEncoderWrapper.build_fast_transformer_encoder"]], "build_length_mask() (scgpt.model.model.fasttransformerencoderwrapper static method)": [[3, "scgpt.model.model.FastTransformerEncoderWrapper.build_length_mask"]], "encode_batch() (scgpt.model.generation_model.transformergenerator method)": [[3, "scgpt.model.generation_model.TransformerGenerator.encode_batch"]], "encode_batch() (scgpt.model.model.transformermodel method)": [[3, "scgpt.model.model.TransformerModel.encode_batch"]], "forward() (scgpt.model.generation_model.clsdecoder method)": [[3, "scgpt.model.generation_model.ClsDecoder.forward"]], "forward() (scgpt.model.generation_model.geneencoder method)": [[3, "scgpt.model.generation_model.GeneEncoder.forward"]], "forward() (scgpt.model.generation_model.positionalencoding method)": [[3, "scgpt.model.generation_model.PositionalEncoding.forward"]], "forward() (scgpt.model.generation_model.similarity method)": [[3, "scgpt.model.generation_model.Similarity.forward"]], "forward() (scgpt.model.generation_model.transformergenerator method)": [[3, "scgpt.model.generation_model.TransformerGenerator.forward"]], "forward() (scgpt.model.grad_reverse.gradreverse static method)": [[3, "scgpt.model.grad_reverse.GradReverse.forward"]], "forward() (scgpt.model.model.adversarialdiscriminator method)": [[3, "scgpt.model.model.AdversarialDiscriminator.forward"]], "forward() (scgpt.model.model.batchlabelencoder method)": [[3, "scgpt.model.model.BatchLabelEncoder.forward"]], "forward() (scgpt.model.model.categoryvalueencoder method)": [[3, "scgpt.model.model.CategoryValueEncoder.forward"]], "forward() (scgpt.model.model.clsdecoder method)": [[3, "scgpt.model.model.ClsDecoder.forward"]], "forward() (scgpt.model.model.continuousvalueencoder method)": [[3, "scgpt.model.model.ContinuousValueEncoder.forward"]], "forward() (scgpt.model.model.exprdecoder method)": [[3, "scgpt.model.model.ExprDecoder.forward"]], "forward() (scgpt.model.model.fasttransformerencoderwrapper method)": [[3, "scgpt.model.model.FastTransformerEncoderWrapper.forward"]], "forward() (scgpt.model.model.flashtransformerencoderlayer method)": [[3, "scgpt.model.model.FlashTransformerEncoderLayer.forward"]], "forward() (scgpt.model.model.geneencoder method)": [[3, "scgpt.model.model.GeneEncoder.forward"]], "forward() (scgpt.model.model.mvcdecoder method)": [[3, "scgpt.model.model.MVCDecoder.forward"]], "forward() (scgpt.model.model.positionalencoding method)": [[3, "scgpt.model.model.PositionalEncoding.forward"]], "forward() (scgpt.model.model.similarity method)": [[3, "scgpt.model.model.Similarity.forward"]], "forward() (scgpt.model.model.transformermodel method)": [[3, "scgpt.model.model.TransformerModel.forward"]], "generate() (scgpt.model.model.transformermodel method)": [[3, "scgpt.model.model.TransformerModel.generate"]], "generate_square_subsequent_mask() (in module scgpt.model.generation_model)": [[3, "scgpt.model.generation_model.generate_square_subsequent_mask"]], "generate_square_subsequent_mask() (in module scgpt.model.model)": [[3, "scgpt.model.model.generate_square_subsequent_mask"]], "grad_reverse() (in module scgpt.model.grad_reverse)": [[3, "scgpt.model.grad_reverse.grad_reverse"]], "init_weights() (scgpt.model.generation_model.transformergenerator method)": [[3, "scgpt.model.generation_model.TransformerGenerator.init_weights"]], "init_weights() (scgpt.model.model.transformermodel method)": [[3, "scgpt.model.model.TransformerModel.init_weights"]], "pred_perturb() (scgpt.model.generation_model.transformergenerator method)": [[3, "scgpt.model.generation_model.TransformerGenerator.pred_perturb"]], "scgpt.model": [[3, "module-scgpt.model"]], "scgpt.model.dsbn": [[3, "module-scgpt.model.dsbn"]], "scgpt.model.generation_model": [[3, "module-scgpt.model.generation_model"]], "scgpt.model.grad_reverse": [[3, "module-scgpt.model.grad_reverse"]], "scgpt.model.model": [[3, "module-scgpt.model.model"]], "training (scgpt.model.dsbn.domainspecificbatchnorm1d attribute)": [[3, "scgpt.model.dsbn.DomainSpecificBatchNorm1d.training"]], "training (scgpt.model.dsbn.domainspecificbatchnorm2d attribute)": [[3, "scgpt.model.dsbn.DomainSpecificBatchNorm2d.training"]], "training (scgpt.model.generation_model.clsdecoder attribute)": [[3, "scgpt.model.generation_model.ClsDecoder.training"]], "training (scgpt.model.generation_model.geneencoder attribute)": [[3, "scgpt.model.generation_model.GeneEncoder.training"]], "training (scgpt.model.generation_model.positionalencoding attribute)": [[3, "scgpt.model.generation_model.PositionalEncoding.training"]], "training (scgpt.model.generation_model.similarity attribute)": [[3, "scgpt.model.generation_model.Similarity.training"]], "training (scgpt.model.generation_model.transformergenerator attribute)": [[3, "scgpt.model.generation_model.TransformerGenerator.training"]], "training (scgpt.model.model.adversarialdiscriminator attribute)": [[3, "scgpt.model.model.AdversarialDiscriminator.training"]], "training (scgpt.model.model.batchlabelencoder attribute)": [[3, "scgpt.model.model.BatchLabelEncoder.training"]], "training (scgpt.model.model.categoryvalueencoder attribute)": [[3, "scgpt.model.model.CategoryValueEncoder.training"]], "training (scgpt.model.model.clsdecoder attribute)": [[3, "scgpt.model.model.ClsDecoder.training"]], "training (scgpt.model.model.continuousvalueencoder attribute)": [[3, "scgpt.model.model.ContinuousValueEncoder.training"]], "training (scgpt.model.model.exprdecoder attribute)": [[3, "scgpt.model.model.ExprDecoder.training"]], "training (scgpt.model.model.fasttransformerencoderwrapper attribute)": [[3, "scgpt.model.model.FastTransformerEncoderWrapper.training"]], "training (scgpt.model.model.flashtransformerencoderlayer attribute)": [[3, "scgpt.model.model.FlashTransformerEncoderLayer.training"]], "training (scgpt.model.model.geneencoder attribute)": [[3, "scgpt.model.model.GeneEncoder.training"]], "training (scgpt.model.model.mvcdecoder attribute)": [[3, "scgpt.model.model.MVCDecoder.training"]], "training (scgpt.model.model.positionalencoding attribute)": [[3, "scgpt.model.model.PositionalEncoding.training"]], "training (scgpt.model.model.similarity attribute)": [[3, "scgpt.model.model.Similarity.training"]], "training (scgpt.model.model.transformermodel attribute)": [[3, "scgpt.model.model.TransformerModel.training"]], "databank (class in scgpt.scbank.databank)": [[4, "scgpt.scbank.databank.DataBank"]], "datatable (class in scgpt.scbank.data)": [[4, "scgpt.scbank.data.DataTable"]], "metainfo (class in scgpt.scbank.data)": [[4, "scgpt.scbank.data.MetaInfo"]], "setting (class in scgpt.scbank.setting)": [[4, "scgpt.scbank.setting.Setting"]], "append_study() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.append_study"]], "batch_from_anndata() (scgpt.scbank.databank.databank class method)": [[4, "scgpt.scbank.databank.DataBank.batch_from_anndata"]], "cell_ids (scgpt.scbank.data.metainfo attribute)": [[4, "scgpt.scbank.data.MetaInfo.cell_ids"]], "custom_filter() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.custom_filter"]], "data (scgpt.scbank.data.datatable attribute)": [[4, "scgpt.scbank.data.DataTable.data"]], "data_tables (scgpt.scbank.databank.databank attribute)": [[4, "scgpt.scbank.databank.DataBank.data_tables"]], "delete_study() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.delete_study"]], "filter() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.filter"]], "from_anndata() (scgpt.scbank.databank.databank class method)": [[4, "scgpt.scbank.databank.DataBank.from_anndata"]], "from_path() (scgpt.scbank.data.metainfo class method)": [[4, "scgpt.scbank.data.MetaInfo.from_path"]], "from_path() (scgpt.scbank.databank.databank class method)": [[4, "scgpt.scbank.databank.DataBank.from_path"]], "gene_vocab (scgpt.scbank.databank.databank property)": [[4, "scgpt.scbank.databank.DataBank.gene_vocab"]], "gene_vocab_md5 (scgpt.scbank.data.metainfo attribute)": [[4, "scgpt.scbank.data.MetaInfo.gene_vocab_md5"]], "immediate_save (scgpt.scbank.setting.setting attribute)": [[4, "scgpt.scbank.setting.Setting.immediate_save"]], "is_loaded (scgpt.scbank.data.datatable property)": [[4, "scgpt.scbank.data.DataTable.is_loaded"]], "link() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.link"]], "load() (scgpt.scbank.data.metainfo method)": [[4, "scgpt.scbank.data.MetaInfo.load"]], "load() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.load"]], "load_all() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.load_all"]], "load_anndata() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.load_anndata"]], "load_table() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.load_table"]], "main_data (scgpt.scbank.databank.databank property)": [[4, "scgpt.scbank.databank.DataBank.main_data"]], "main_table_key (scgpt.scbank.data.metainfo attribute)": [[4, "scgpt.scbank.data.MetaInfo.main_table_key"]], "main_table_key (scgpt.scbank.databank.databank property)": [[4, "scgpt.scbank.databank.DataBank.main_table_key"]], "max_tokenize_batch_size (scgpt.scbank.setting.setting attribute)": [[4, "scgpt.scbank.setting.Setting.max_tokenize_batch_size"]], "meta_info (scgpt.scbank.databank.databank attribute)": [[4, "scgpt.scbank.databank.DataBank.meta_info"]], "name (scgpt.scbank.data.datatable attribute)": [[4, "scgpt.scbank.data.DataTable.name"]], "on_disk_format (scgpt.scbank.data.metainfo attribute)": [[4, "scgpt.scbank.data.MetaInfo.on_disk_format"]], "on_disk_path (scgpt.scbank.data.metainfo attribute)": [[4, "scgpt.scbank.data.MetaInfo.on_disk_path"]], "remove_zero_rows (scgpt.scbank.setting.setting attribute)": [[4, "scgpt.scbank.setting.Setting.remove_zero_rows"]], "save() (scgpt.scbank.data.datatable method)": [[4, "scgpt.scbank.data.DataTable.save"]], "save() (scgpt.scbank.data.metainfo method)": [[4, "scgpt.scbank.data.MetaInfo.save"]], "save() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.save"]], "scgpt.scbank": [[4, "module-scgpt.scbank"]], "scgpt.scbank.data": [[4, "module-scgpt.scbank.data"]], "scgpt.scbank.databank": [[4, "module-scgpt.scbank.databank"]], "scgpt.scbank.monitor": [[4, "module-scgpt.scbank.monitor"]], "scgpt.scbank.setting": [[4, "module-scgpt.scbank.setting"]], "settings (scgpt.scbank.databank.databank attribute)": [[4, "scgpt.scbank.databank.DataBank.settings"]], "study_ids (scgpt.scbank.data.metainfo attribute)": [[4, "scgpt.scbank.data.MetaInfo.study_ids"]], "sync() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.sync"]], "track() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.track"]], "update_datatables() (scgpt.scbank.databank.databank method)": [[4, "scgpt.scbank.databank.DataBank.update_datatables"]], "genetokenizer (class in scgpt.tokenizer.gene_tokenizer)": [[5, "scgpt.tokenizer.gene_tokenizer.GeneTokenizer"]], "genevocab (class in scgpt.tokenizer.gene_tokenizer)": [[5, "scgpt.tokenizer.gene_tokenizer.GeneVocab"]], "from_dict() (scgpt.tokenizer.gene_tokenizer.genevocab class method)": [[5, "scgpt.tokenizer.gene_tokenizer.GeneVocab.from_dict"]], "from_file() (scgpt.tokenizer.gene_tokenizer.genevocab class method)": [[5, "scgpt.tokenizer.gene_tokenizer.GeneVocab.from_file"]], "get_default_gene_vocab() (in module scgpt.tokenizer.gene_tokenizer)": [[5, "scgpt.tokenizer.gene_tokenizer.get_default_gene_vocab"]], "pad_batch() (in module scgpt.tokenizer.gene_tokenizer)": [[5, "scgpt.tokenizer.gene_tokenizer.pad_batch"]], "pad_token (scgpt.tokenizer.gene_tokenizer.genevocab property)": [[5, "scgpt.tokenizer.gene_tokenizer.GeneVocab.pad_token"]], "random_mask_value() (in module scgpt.tokenizer.gene_tokenizer)": [[5, "scgpt.tokenizer.gene_tokenizer.random_mask_value"]], "save_json() (scgpt.tokenizer.gene_tokenizer.genevocab method)": [[5, "scgpt.tokenizer.gene_tokenizer.GeneVocab.save_json"]], "scgpt.tokenizer": [[5, "module-scgpt.tokenizer"]], "scgpt.tokenizer.gene_tokenizer": [[5, "module-scgpt.tokenizer.gene_tokenizer"]], "set_default_token() (scgpt.tokenizer.gene_tokenizer.genevocab method)": [[5, "scgpt.tokenizer.gene_tokenizer.GeneVocab.set_default_token"]], "tokenize_and_pad_batch() (in module scgpt.tokenizer.gene_tokenizer)": [[5, "scgpt.tokenizer.gene_tokenizer.tokenize_and_pad_batch"]], "tokenize_batch() (in module scgpt.tokenizer.gene_tokenizer)": [[5, "scgpt.tokenizer.gene_tokenizer.tokenize_batch"]], "training (scgpt.tokenizer.gene_tokenizer.genevocab attribute)": [[5, "scgpt.tokenizer.gene_tokenizer.GeneVocab.training"]], "mainprocessonly (class in scgpt.utils.util)": [[6, "scgpt.utils.util.MainProcessOnly"]], "add_file_handler() (in module scgpt.utils.util)": [[6, "scgpt.utils.util.add_file_handler"]], "category_str2int() (in module scgpt.utils.util)": [[6, "scgpt.utils.util.category_str2int"]], "eval_scib_metrics() (in module scgpt.utils.util)": [[6, "scgpt.utils.util.eval_scib_metrics"]], "find_required_colums() (in module scgpt.utils.util)": [[6, "scgpt.utils.util.find_required_colums"]], "gene_vocabulary() (in module scgpt.utils.util)": [[6, "scgpt.utils.util.gene_vocabulary"]], "get_free_gpu() (in module scgpt.utils.util)": [[6, "scgpt.utils.util.get_free_gpu"]], "histogram() (in module scgpt.utils.util)": [[6, "scgpt.utils.util.histogram"]], "isnotebook() (in module scgpt.utils.util)": [[6, "scgpt.utils.util.isnotebook"]], "main_process_only() (in module scgpt.utils.util)": [[6, "scgpt.utils.util.main_process_only"]], "scgpt.utils": [[6, "module-scgpt.utils"]], "scgpt.utils.util": [[6, "module-scgpt.utils.util"]], "set_seed() (in module scgpt.utils.util)": [[6, "scgpt.utils.util.set_seed"]], "tensorlist2tensor() (in module scgpt.utils.util)": [[6, "scgpt.utils.util.tensorlist2tensor"]]}})